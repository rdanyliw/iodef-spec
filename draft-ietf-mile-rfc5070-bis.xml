<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<rfc ipr="pre5378Trust200902" 
     docName="draft-ietf-mile-rfc5070-bis-07" 
     obsoletes="5070" 
     category="std">
	
<?rfc rfcedstyle="yes" ?>
<?rfc toc='yes'?>
<?rfc subcompact='no'?>
<?rfc sortrefs='no'?>
<?rfc symrefs='yes'?>
<?rfc iprnotified='yes' ?>

<front>

<title abbrev="IODEFv2">
The Incident Object Description Exchange Format v2</title>

<author initials="R." surname="Danyliw" fullname="Roman Danyliw">
    <organization abbrev="CERT">CERT - Software Engineering Institute</organization>
      <address>
        <postal>
         <street/>
          <city>Pittsburgh</city>
	  <region>PA</region>
          <country>USA</country>
        </postal>
        <email>rdd@cert.org</email>
      </address>
    </author>
    <author initials="P. W." surname="Stoecker" fullname="Paul Stoecker">
      <organization>RSA</organization>
      <address>
        <postal>
          <street />
          <city>Reston</city>
          <region>VA</region>
          <country>USA</country>
        </postal>
        <email>paul.stoecker@rsa.com</email>
      </address>
    </author>
       
    
<date month="July" year="2014"/>
<area>Security</area>
<workgroup>MILE Working Group</workgroup>
<keyword>STD</keyword>
<keyword>Standards Track</keyword>
<keyword>incident data format</keyword>
<keyword>incident report</keyword>
<keyword>cyber threat indicators</keyword>
<keyword>computer security incident</keyword>
<keyword>computer security incident response team</keyword>
<keyword>CSIRT</keyword>
<keyword>CERT</keyword>
<keyword>security data sharing</keyword>
<keyword>Computer Network Defense Service Provider</keyword>
<keyword>CNDSP</keyword>
<keyword>information sharing</keyword>
<keyword>cyber indicators</keyword>

<abstract>
<t>The Incident Object Description Exchange Format (IODEF) defines a data representation for sharing information commonly exchanged by Computer Security Incident Response Teams (CSIRTs) about computer security incidents.  This document describes the information model for the 
IODEF and provides an associated data model specified with XML Schema.
</t>
</abstract>
</front>

<middle>
 
<section title="Introduction" anchor="introduction">
<t>
Organizations require help from other parties to mitigate malicious activity targeting their network and to gain insight into potential threats.  This coordination might entail working with an ISP to filter attack traffic, contacting a remote site to take down a bot-network, or sharing watch-lists of known malicious IP addresses in a consortium.
</t>
<t>
The Incident Object Description Exchange Format (IODEF) is a format for representing computer security information commonly exchanged between Computer Security Incident Response Teams (CSIRTs).  It provides an XML representation for conveying:
<list style="symbols">
<t>cyber intelligence to characterize threats;</t>
<t>cyber incident reports to document particular cyber security events or relationships between events;</t>
<t>cyber event mitigation to request proactive and reactive mitigation approaches to cyber intelligence or incidents; and</t>
<t>cyber information sharing meta-data so that these various classes of information can be exchanged among parties.</t>
</list>
</t>
<t>The data model encodes information about hosts, networks, and the services running on these systems; attack methodology and associated forensic evidence; impact of the activity; and limited approaches for documenting workflow.
</t>

<t>
The overriding purpose of the IODEF is to enhance the operational capabilities of CSIRTs.  Community adoption of the IODEF provides an improved ability to resolve incidents and convey situational awareness by simplifying collaboration and data sharing.  This structured format provided by the IODEF allows for:
</t>

<t>
<list style="symbols">

<t>increased automation in processing of incident data, since the resources of security analysts to parse free-form textual documents will be reduced;
</t>

<t>decreased effort in normalizing similar data (even when highly structured) from different sources; and 
</t>

<t>a common format on which to build interoperable tools for incident handling and subsequent analysis, specifically when data comes from multiple constituencies.
</t>
</list>
</t>

<t>
Coordinating with other CSIRTs is not strictly a technical problem.  There are numerous procedural, trust, and legal considerations that might prevent an organization from sharing information.  The IODEF does not attempt to address them.  However, operational implementations of the IODEF will need to consider this broader context.
</t>

<t>
Sections 3 and 8 specify the IODEF data model with text and an XML schema.  The types used by the data model are covered in Section 2.  Processing considerations, the handling of extensions, and internationalization issues related to the data model are covered in Sections 4, 5, and 6, respectively.  Examples are listed in Section 7.  Section 1 provides the background for the IODEF, and Section 9 documents the security considerations.
</t>
			
<section title="Changes from 5070" anchor="changes">
<t>
This document contains changes with respect to its predecessor RFC5070.				
<list style="symbols">
<t>All of the RFC5070 Errata was implemented.</t>	
<t>Imported the xmlns:ds namespace to include digital signature hash classes.</t>
<t>The @indicator-* attributes were added to various classes to reference commonly shared indicators.</t>		
<t>The following classes were added to IODEF-Document: AdditionalData.</t>
<t>The following class was added to Incident: IndicatorData.</t>
<t>The following classes were added to Incident and EventData: Discovery.</t>
<t>The following classes and attributes were added to the Service class:  EmailData, DomainData, AssetID, ApplicationHeader @virtual, and @ownership.  Service@ip_protocol was renamed to @ip-protocol.</t>
<t>The following classes were added to the Record class:  FileName and WindowsRegistryKeysModified.</t>
<t>The following classes were added to the RelatedActivity class: ThreatActor, Campaign, Confidence, Description, and AdditionalData.</t>
<t>The following classes were added to Assessment: BusinessImpact.</t>
<t>The following classes were added to Node: PostalAddress and DomainData.  The following classes were removed from Node: Removed NodeName and DateTime.</t>
<t>The following classes were added to the Contact class: ContactTitle.</t>
<t>The following classes were added to Expectation and HistoryItem: DefinedCOA.</t>
<t>(for consideration) The following attributes was added to the SoftwareType complexType: user-agent.</t>
<t>Additional enumerated values were added to the following attributes: @restriction, {Expectation, HistoryItem}@action, NodeRole@category, Incident@purpose, Contact@role, AdditionalData@dtype, System@spoofed.</t>
</list></t>	
</section>  <!-- Changes -->
			
<section title="Terminology" anchor="terminology">
<t>
The key words "MUST," "MUST NOT," "REQUIRED," "SHALL," "SHALL NOT," "SHOULD," "SHOULD NOT," "RECOMMENDED," "MAY," and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119" />.
</t>
<t>
Definitions for some of the common computer security-related terminology used in this document can be found in Section 2 of <xref target="refs.requirements" />.
</t>
</section>  <!-- Terminology -->

<section title="Notations" anchor="notation">
<t>
The normative IODEF data model is specified with the text in Section 3 and the XML schema in Section 8.  To help in the understanding of the data elements, Section 3 also depicts the underlying information model using Unified Modeling Language (UML).  This abstract presentation of the IODEF is not normative.
</t>
<t>
For clarity in this document, the term "XML document" will be used when referring generically to any instance of an XML document.  The term "IODEF document" will be used to refer to specific elements and attributes of the IODEF schema.  The terms "class" and "element" will be used interchangeably to reference either the corresponding data element in the information or data models, respectively.
</t>
</section> <!-- Notation -->

<section title="About the IODEF Data Model" anchor="about_dm">
<t>
The IODEF data model is a data representation that provides a framework for sharing information commonly exchanged by CSIRTs about computer security incidents.  A number of considerations were made in the design of the data model.
</t>

<t>
<list style="symbols">
<t>
The data model serves as a transport format.  Therefore, its specific representation is not the optimal representation for on-disk storage, long-term archiving, or in-memory processing.
</t>

<t>
As there is no precise widely agreed upon definition for an incident, the data model does not attempt to dictate one through its implementation.  Rather, a broad understanding is assumed in the IODEF that is flexible enough to encompass most operators. 
</t>

<t>
Describing an incident for all definitions would require an extremely complex data model.  Therefore, the IODEF only intends to be a framework to convey commonly exchanged incident information.  It ensures that there are ample mechanisms for extensibility to support organization-specific information, and techniques to reference information kept outside of the explicit data model.
</t>

<t>
The domain of security analysis is not fully standardized and must rely on free-form textual descriptions.  The IODEF attempts to strike a balance between supporting this free-form content, while still allowing automated processing of incident information.
</t>

<t>
The IODEF is only one of several security relevant data representations being standardized.  Attempts were made to ensure they were complementary.  The data model of the Intrusion Detection Message Exchange Format <xref target="RFC4765" /> influenced the design of the IODEF.
</t>

</list>
</t>

<t>Further discussion of the desirable properties for the IODEF can be found in the <xref target="refs.requirements">Requirements for the Format for Incident Information Exchange (FINE)</xref>.</t>

</section>  <!-- About the IODEF Data Model -->

<section title="About the IODEF Implementation" anchor="about_implement">

<t>The IODEF implementation is specified as an Extensible Markup Language (XML) <xref target="W3C.XML" /> Schema <xref target="W3C.SCHEMA" />.
</t>

<t>
Implementing the IODEF in XML provides numerous advantages.  Its extensibility makes it ideal for specifying a data encoding framework that supports various character encodings.  Likewise, the abundance of related technologies (e.g., XSL, XPath, XML-Signature) makes for simplified manipulation.  However, XML is fundamentally a text representation, which makes it inherently inefficient when binary data must be embedded or large volumes of data must be exchanged.</t>

</section>  <!-- About the IODEF Implementation -->

</section>  <!-- Introduction -->

<section title="IODEF Data Types" anchor="iodef_data_types">
<t>
The various data elements of the IODEF data model are typed.  This section discusses these data types.  When possible, native Schema data types were adopted, but for more complicated formats, regular expressions (see Appendix F of <xref target="W3C.SCHEMA.DTYPES" />) or external standards were used.
</t>

<section title="Integers" anchor="dt_integers">
<t>An integer is represented by the INTEGER data type.  Integer data MUST be encoded in Base 10.</t>

<t>The INTEGER data type is implemented as an "xs:integer" in <xref target="W3C.SCHEMA.DTYPES" />.</t>

</section>

<section title="Real Numbers" anchor="dt_real_numbers">
<t>Real (floating-point) attributes are represented by the REAL data type.  Real data MUST be encoded in Base 10.</t>

<t>The REAL data type is implemented as an "xs:float" in <xref target="W3C.SCHEMA.DTYPES" />.</t>

</section>

<section title="Characters and Strings" anchor="dt_char_strings">
<t>A single character is represented by the CHARACTER data type.  A character string is represented by the STRING data type.  Special characters must be encoded using entity references.  See <xref target="encoding" />.</t>

<t>The CHARACTER and STRING data types are implement as an "xs:string" in <xref target="W3C.SCHEMA.DTYPES" />.</t>

</section>

<section title="Multilingual Strings" anchor="dt_ml_strings">
<t>STRING data that represents multi-character attributes in a language different than the default encoding of the document is of the ML_STRING data type. </t>

<t>The ML_STRING data type is implemented as an "iodef:MLStringType" in the schema.</t>
</section>

<section title="Bytes" anchor="dt_bytes">
<t>A binary octet is represented by the BYTE data type.  A sequence of binary octets is represented by the BYTE[] data type.  These octets are encoded using base64.</t>

<t>The BYTE data type is implemented as an "xs:base64Binary" in <xref target="W3C.SCHEMA.DTYPES" />.</t>
</section>

<section title="Hexadecimal Bytes" anchor="dt_hexbin">
<t>A binary octet is represented by the HEXBIN (and HEXBIN[]) data type.  This octet is encoded as a character tuple consisting of two hexadecimal digits.</t>

<t>The HEXBIN data type is implemented as an "xs:hexBinary" in <xref target="W3C.SCHEMA.DTYPES" />.</t>
</section>

<section title="Enumerated Types" anchor="dt_enumerated">
<t>Enumerated types are represented by the ENUM data type, and consist of an ordered list of acceptable values.  Each value has a representative keyword.  Within the IODEF schema, the enumerated type keywords are used as attribute values.</t>

<t>The ENUM data type is implemented as a series of "xs:NMTOKEN" in the schema.</t>

</section>

<section title="Date-Time Strings" anchor="dt_date_time">
<t>Date-time strings are represented by the DATETIME data type.  Each date-time string identifies a particular instant in time; ranges are not supported.</t>

<t>Date-time strings are formatted according to a subset of <xref target="ISO8601" /> documented in <xref target="RFC3339" />.</t>

<t>The DATETIME data type is implemented as an "xs:dateTime" in the schema.</t>
</section>

<section title="Timezone String" anchor="dt_timezone">
<t>A timezone offset from UTC is represented by the TIMEZONE data type.  It is formatted according to the following regular expression: "Z|[\+\-](0[0-9]|1[0-4]):[0-5][0-9]".
</t>
<t>The TIMEZONE data type is implemented as an "xs:string" with a regular expression constraint in <xref target="W3C.SCHEMA.DTYPES" />.  This regular expression is identical to the timezone representation implemented in an "xs:dateTime".</t>
</section>  <!-- TIMEZONE DT -->


<section title="Port Lists" anchor="dt_port_list">
<t>A list of network ports are represented by the PORTLIST data type.  A PORTLIST consists of a comma-separated list of numbers and ranges (N-M means ports N through M, inclusive).  It is formatted according to the following regular expression: "\d+(\-\d+)?(,\d+(\-\d+)?)*".  For example, "2,5-15,30,32,40-50,55-60".</t>

<t>The PORTLIST data type is implemented as an "xs:string" with a regular expression constraint in the schema.</t>
</section>

<?rfc needLines="10" ?>
<section title="Postal Address" anchor="dt_postal_address">

<t>A postal address is represented by the POSTAL data type.  This data type is an ML_STRING whose format is documented in Section 2.23 of <xref target="RFC4519" />.  It defines a postal address as a free-form multi-line string separated by the "$" character.
</t>
<t>The POSTAL data type is implemented as an "xs:string" in the schema.</t>
</section>  <!-- Postal Address DT -->

<section title="Person or Organization" anchor="dt_person">
<t>The name of an individual or organization is represented by the NAME data type.  This data type is an ML_STRING whose format is documented in Section 2.3 of <xref target="RFC4519" />.
</t>
<t>The NAME data type is implemented as an "xs:string" in the schema.</t>
</section>  <!-- Person DT -->

<section title="Telephone and Fax Numbers" anchor="dt_phone">
<t>A telephone or fax number is represented by the PHONE data type.  The format of the PHONE data type is documented in Section 2.35 of <xref target="RFC4519" />.
</t>
<t>The PHONE data type is implemented as an "xs:string" in the schema.</t>
</section>  <!-- Telephone DT -->

<section title="Email String" anchor="dt_email">
<t>An email address is represented by the EMAIL data type.  The format of the EMAIL data type is documented in Section 3.4.1 <xref target="RFC5322" />.
</t>
<t>The EMAIL data type is implemented as an "xs:string" in the schema.</t>
</section>  <!-- Email DT -->

<section title="Uniform Resource Locator strings" anchor="dt_url">
<t>A uniform resource locator (URL) is represented by the URL data type.  The format of the URL data type is documented in <xref target="RFC3986" />.
</t>
<t>The URL data type is implemented as an "xs:anyURI" in the schema.</t>
</section>  <!-- URL DT -->

<section title="Identifiers and Identifier References" anchor="dt_ids">
<t>An identifier unique to the Document is represented by the ID data type.  A reference to this identifier is represented by the IDREF data type.  The acceptable format of ID and IDREF is documented in Section 3.3.8 and 3.3.9 of <xref target="W3C.SCHEMA.DTYPES" />.
</t>
<t>The ID and IDREF data types are implemented as "xs:ID" and "xs:IDREF" in the schema.</t>
</section>  <!-- ID and IDREF DT -->


</section> <!-- IODEF Data Types -->

<section title="The IODEF Data Model" anchor="datamodel">
<t>
In this section, the individual components of the IODEF data model will be discussed in detail.  For each class, the semantics will be described and the relationship with other classes will be depicted with UML.  When necessary, specific comments will be made about corresponding definition in the schema in <xref target="schema" />
</t>

<section title="IODEF-Document Class" anchor="IODEF-Document">
<t>
The IODEF-Document class is the top level class in the IODEF data model.  All IODEF documents are an instance of this class.
</t>
  
<t>
<figure title="IODEF-Document Class" anchor="figure_iodef-message_class">
		<artwork><![CDATA[
+-----------------+       
| IODEF-Document  |
+-----------------+
| STRING version  |<>--{1..*}--[ Incident       ]
| ENUM lang       |<>--{0..*}--[ AdditionalData ]
| STRING formatid |
+-----------------+
		]]></artwork>
	</figure>
	</t>

<t>The aggregate class that constitute IODEF-Document is:
<list style="hanging">
<t hangText="Incident"><vspace/>One or more.  The information related to a single incident.</t> 
<t hangText="AdditionalData"><vspace/>Zero or more.  Mechanism by which to extend the data model.  See <xref target="AdditionalData" /></t>
</list>
</t>

<t>The IODEF-Document class has three attributes:
<list style="hanging">
<t hangText="version"><vspace/>Required.  STRING.  The IODEF specification version number to which this IODEF document conforms.  The value of this attribute MUST be "2.00"</t>

<t hangText="lang"><vspace/>Required.  ENUM.  A valid language code per <xref target="RFC4646" /> constrained by the definition of "xs:language".  The interpretation of this code is described in <xref target="internationalization" />. </t>

<t hangText="formatid"><vspace/>Optional.  STRING.  A free-form string to convey processing instructions to the recipient of the document.  Its semantics must be negotiated out-of-band.</t>
	</list></t>

	</section> <!-- IODEF-Document class -->


<section title="Incident Class" anchor="Incident">
<t>
Every incident is represented by an instance of the Incident class.  This class provides a standardized representation for commonly exchanged incident data.
</t>

<t>
<figure title="The Incident Class" anchor="figure_incident_class">
<artwork><![CDATA[
+-------------------------+
| Incident                |
+-------------------------+
| ENUM purpose            |<>----------[ IncidentID      ]
| STRING ext-purpose      |<>--{0..1}--[ AlternativeID   ]
| ENUM lang               |<>--{0..*}--[ RelatedActivity ]
| ENUM restriction        |<>--{0..1}--[ DetectTime      ]
| STRING observable-uid   |<>--{0..1}--[ StartTime       ]
|                         |<>--{0..1}--[ EndTime         ]
|                         |<>----------[ ReportTime      ]
|                         |<>--{0..*}--[ Description     ]
|                         |<>--{0..*}  [ Discovery       ]
|                         |<>--{1..*}--[ Assessment      ]
|                         |<>--{0..*}--[ Method          ]
|                         |<>--{1..*}--[ Contact         ]
|                         |<>--{0..*}--[ EventData       ]
|                         |<>--{0..*}--[ IndicatorData   ]
|                         |<>--{0..1}--[ History         ]
|                         |<>--{0..*}--[ AdditionalData  ]
+-------------------------+
		]]></artwork>
	</figure></t>


<t>The aggregate classes that constitute Incident are:

<list style="hanging">
<t hangText="IncidentID"><vspace/>One.  An incident tracking number assigned to this incident by the CSIRT that generated the IODEF document.</t>

<t hangText="AlternativeID"><vspace/>Zero or one.  The incident tracking numbers used by other CSIRTs to refer to the incident described in the document.</t>

<t hangText="RelatedActivity"><vspace/>Zero or more.  Related activity and attribution of this activity.</t>

<t hangText="DetectTime"><vspace/>Zero or one.  The time the incident was first detected.</t>

<t hangText="StartTime"><vspace/>Zero or one.  The time the incident started.</t>

<t hangText="EndTime"><vspace/>Zero or one.  The time the incident ended.</t>

<t hangText="ReportTime"><vspace/>One.  The time the incident was reported.</t>

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form textual description of the incident.</t>

<t hangText="Discovery"><vspace/>Zero or more.  The means by which this incident was detected.</t>

<t hangText="Assessment"><vspace/>One or more.  A characterization of the impact of the incident.</t>

<t hangText="Method"><vspace/>Zero or more.  The techniques used by the intruder in the incident.</t>

<t hangText="Contact"><vspace/>One or more.  Contact information for the parties involved in the incident.</t>

<t hangText="EventData"><vspace/>Zero or more.  Description of the events comprising the incident.</t>

<t hangText="IndicatorData"><vspace/>Zero or more.  Description of indicators.</t>

<t hangText="History"><vspace/>Zero or one.  A log of significant events or actions that occurred during the course of handling the incident.</t>


<t hangText="AdditionalData"><vspace/>Zero or more.  Mechanism by which to extend the data model.</t>
	</list></t>

<t>The Incident class has four attributes:
<list style="hanging">

<t hangText="purpose"><vspace/>Required.  ENUM.  The purpose attribute represents the reason why the IODEF document was created.  It is closely related to the <xref target="Expectation">Expectation class</xref>.

This attribute is defined as an enumerated list:

<list style="numbers">
<t>traceback.  The document was sent for trace-back purposes.</t>

<t>mitigation.  The document was sent to request aid in mitigating the described activity.</t>

<t>reporting.  The document was sent to comply with reporting requirements.</t> 

<t>watch.  The document was sent to convey indicators to watch for particular activity.</t>

<t>other.  The document was sent for purposes specified in the Expectation class.</t>

<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>

</list></t>

<t hangText="ext-purpose"><vspace/>Optional.  STRING.  A means by which to extend the purpose attribute.  See <xref target="extending_enums" />.</t>

<t hangText="lang"><vspace/>Optional.  ENUM.  A valid language code per <xref target="RFC4646" /> constrained by the definition of "xs:language".  The interpretation of this code is described in <xref target="internationalization" />. </t>

<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>

<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
						
</list></t>

</section>  <!-- Incident class -->

<section title="Common Attributes" anchor="common_attributes">
<t>There are a number of recurring attributes used by the data model.  They are documented in this section.</t>

<section title="restriction Attribute" anchor="restriction">
<t>
The restriction attribute indicates the disclosure guidelines to which the sender expects the recipient to adhere for the information represented in this class and its children.  This guideline provides no security since there are no specified technical means to ensure that the recipient of the document handles the information as the sender requested.
</t>
<t>
The value of this attribute is logically inherited by the children of this class.  That is to say, the disclosure rules applied to this class, also apply to its children.  
</t>
<t>
It is possible to set a granular disclosure policy, since all of the high-level classes (i.e., children of the Incident class) have a restriction attribute.  Therefore, a child can override the guidelines of a parent class, be it to restrict or relax the disclosure rules (e.g., a child has a weaker policy than an ancestor; or an ancestor has a weak policy, and the children selectively apply more rigid controls).  The implicit value of the restriction attribute for a class that did not specify one can be found in the closest ancestor that did specify a value.
</t>
<t>
This attribute is defined as an enumerated value with a default value of "private".  Note that the default value of the restriction attribute is only defined in the context of the Incident class.  In other classes where this attribute is used, no default is specified.

<list style="numbers">
<t>public.  The information can be freely distributed without restriction.</t>
<t>partner.  The information may be shared within a closed community of peers, partners, or affected parties, but cannot be openly published.</t>
<t>need-to-know.  The information may be shared only within the organization with individuals that have a need to know.</t>
<t>private.  The information may not be shared.</t>
<t>default.  The information can be shared according to an information disclosure policy pre-arranged by the communicating parties.</t>
<t>white. Same as 'public'.</t>
<t>green. Same as 'partner'.</t>
<t>amber. Same as 'need-to-know'.</t>
<t>red. Same as 'private'.</t>
</list></t>
</section> <!-- @restriction -->

<section title="observable-id Attribute" anchor="observableid_attribute">
<t>Information included in an incident report may be an observable relevant to an indicator.  The observable-id attribute provides a unique identifier in the scope of the document for this observable.  This identifer can then used to reference the observable with an ObservableReference class to define an indicator in the IndicatorData class.</t>

</section> <!-- observable-id attribute -->

</section> <!-- Common Attributes -->

<section title="IncidentID Class" anchor="IncidentID">
<t>The IncidentID class represents an incident tracking number that is unique in the context of the CSIRT and identifies the activity characterized in an IODEF Document.  This identifier would serve as an index into the CSIRT incident handling system.  The combination of the name attribute and the string in the element content MUST be a globally unique identifier describing the activity.  Documents generated by a given CSIRT MUST NOT reuse the same value unless they are referencing the same incident.</t>

	<figure title="The IncidentID Class" anchor="figure_incidentid_class">
		<artwork><![CDATA[
+------------------+
| IncidentID       |
+------------------+
| STRING           |
|                  |
| STRING name      |
| STRING instance  |
| ENUM restriction |
+------------------+
		]]></artwork>
	</figure>

<t>The IncidentID class has three attributes:
<list style="hanging">
<t hangText="name"><vspace/>Required.  STRING.  An identifier describing the CSIRT that created the document.  In order to have a globally unique CSIRT name, the fully qualified domain name associated with the CSIRT MUST be used.</t>

<t hangText="instance"><vspace/>Optional.  STRING.  An identifier referencing a subset of the named incident.</t>

<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.  The default value is "public".</t>

	</list>
	</t>
	</section>  <!-- IncidentID class -->

<section title="AlternativeID Class" anchor="AlternativeID">
<t>The AlternativeID class lists the incident tracking numbers used by CSIRTs, other than the one generating the document, to refer to the identical activity described in the IODEF document.  A tracking number listed as an AlternativeID references the same incident detected by another CSIRT.  The incident tracking numbers of the CSIRT that generated the IODEF document must never be considered an AlternativeID.
</t>

<t>
	<figure title="The AlternativeID Class" anchor="figure_AlternativeID_class">
		<artwork><![CDATA[
+------------------+
| AlternativeID    |
+------------------+
| ENUM restriction |<>--{1..*}--[ IncidentID ]
|                  |
+------------------+
      ]]></artwork></figure></t>
	
	<t>The aggregate class that constitutes AlternativeID is:
	<list style="hanging">

		<t hangText="IncidentID"><vspace/>One or more.  The incident tracking number of another CSIRT.
		</t> 
	</list></t>
	
	<t>The AlternativeID class has one attribute:
	<list style="hanging">
		<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute has been defined in 
		<xref target="Incident" />.</t>
	</list></t>

	</section> <!-- AlternativeID class -->

<section title="RelatedActivity Class" anchor="RelatedActivity">
<t>The RelatedActivity class relates the information described in the rest of the IODEF document to previously observed incidents or activity; and allows attribution to a specific actor or campaign.</t>

<t>
<figure title="RelatedActivity Class" anchor="figure_RelatedActivity_class">
<artwork><![CDATA[
+------------------+
| RelatedActivity  |
+------------------+
| ENUM restriction |<>--{0..*}--[ IncidentID     ]
|                  |<>--{0..*}--[ URL            ]
|                  |<>--{0..*}--[ ThreatActor    ]
|                  |<>--{0..*}--[ Campaign       ]
|                  |<>--{0..1}--[ Confidence     ]
|                  |<>--{0..*}--[ Description    ]
|                  |<>--{0..*}--[ AdditionalData ]
+------------------+
      ]]></artwork></figure>
	</t>

<t>The aggregate classes that constitutes RelatedActivity are:
<list style="hanging">

<t hangText="IncidentID"><vspace/>One or more.  The incident tracking number of a related incident.</t> 

<t hangText="URL"><vspace/>One or more.  URL.  A URL to activity related to this incident.</t> 

<t hangText="ThreatActor"><vspace/>One or more.  The threat actor to whom the described activity is attributed.</t> 

<t hangText="Campaign"><vspace/>One or more.  The campaign of a given threat actor to whom the described activity is attributed.</t> 

<t hangText="Confidence"><vspace/>Zero or one.  An estimate of the confidence in attributing this RelatedActivity to the event described in the document.</t> 

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A description of how these relationships were derived.</t> 

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model.</t> 

</list></t>

<t>RelatedActivity MUST at least have one instance of IncidentID, URL, ThreatActor, or Campaign.</t>

<t>The RelatedActivity class has one attribute:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>
</list></t>

   </section> <!-- RelatedActivity class -->

<section title="ThreatActor Class" anchor="ThreatActor">
<t>The ThreatActor class describes a given actor.
</t> 

<t>
<figure title="ThreatActor Class" anchor="figure_ThreatActor_class">
<artwork><![CDATA[
+------------------+
| Actor            |
+------------------+
| ENUM restriction |<>--{0..1}--[ ThreatActorID  ]
|                  |<>--{0..*}--[ Description    ]
|                  |<>--{0..*}--[ AdditionalData ]
+------------------+
      ]]></artwork></figure>
	</t>

<t>The aggregate classes that constitutes ThreatActor are:
<list style="hanging">

<t hangText="ThreatActorID"><vspace/>One or more.  STRING. An identifier for the ThreatActor.</t> 

<t hangText="Description"><vspace/>One or more.  ML_STRING.  A description of the ThreatActor.</t> 

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model.</t> 

</list></t>

<t>ThreatActor MUST have at least one instance of a ThreatActorID or Description.</t>

<t>The ThreatActor class has one attribute:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>
</list></t>

</section> <!-- ThreatActor class -->

<section title="Campaign Class" anchor="Campaign">
<t>The Campaign class describes a ...
</t> 

<t>
<figure title="Campaign Class" anchor="figure_Campaign_class">
<artwork><![CDATA[
+------------------+
| Campaign         |
+------------------+
| ENUM restriction |<>--{0..1}--[ CampaignID     ]
|                  |<>--{0..*}--[ Description    ]
|                  |<>--{0..*}--[ AdditionalData ]
+------------------+
      ]]></artwork></figure>
	</t>

<t>The aggregate classes that constitutes Campaign are:
<list style="hanging">

<t hangText="CampaignID"><vspace/>One or more.  STRING. An identifier for the Campaign.</t> 

<t hangText="Description"><vspace/>One or more.  ML_STRING.  A description of the Campaign.</t> 

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model.</t> 

</list></t>

<t>Campaign MUST have at least one instance of a Campaign or Description.</t>

<t>The Campaign class has one attribute:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>
</list></t>

</section> <!-- Campaign class -->

	
<section title="AdditionalData Class" anchor="AdditionalData">
<t> The AdditionalData class serves as an extension mechanism for information not otherwise represented in the data model.  For relatively simple information, atomic data types (e.g., integers, strings) are provided with a mechanism to annotate their meaning.  The class can also be used to extend the data model (and the associated Schema) to support proprietary extensions by encapsulating entire XML documents conforming to another Schema.  A detailed discussion for extending the data model and the schema can be found in <xref target="extending" />.
</t>

<t>Unlike XML, which is self-describing, atomic data must be documented to convey its meaning.  This information is described in the 'meaning' attribute.  Since these description are outside the scope of the specification, some additional coordination may be required to ensure that a recipient of a document using the AdditionalData classes can make sense of the custom extensions.
</t>

<t>
<figure title="The AdditionalData Class" anchor="figure_additionaldata_class">
<artwork><![CDATA[
+------------------+
| AdditionalData   |
+------------------+
| ANY              |
|                  |
| ENUM dtype       |
| STRING ext-dtype |
| STRING meaning   |
| STRING formatid  |
| ENUM restriction |
+------------------+
]]></artwork></figure></t>
	
<t>The AdditionalData class has five attributes:
<list style="hanging">

<t hangText="dtype"><vspace/>Required.  ENUM.  The data type of the element content.  The permitted values for this attribute are shown below. The default value is "string".

<list style="numbers">
<t>boolean.  The element content is of type BOOLEAN.</t>

<t>byte.  The element content is of type BYTE.</t>

<t>bytes.  The element content is of type HEXBIN.</t>

<t>character.  The element content is of type CHARACTER.</t>

<t>date-time.  The element content is of type DATETIME.</t>	

<t>ntpstamp.  Same as date-time.</t>

<t>integer.  The element content is of type INTEGER.</t>

<t>portlist.  The element content is of type PORTLIST.</t>

<t>real.  The element content is of type REAL.</t>

<t>string.  The element content is of type STRING.</t>

<t>file.  The element content is a base64 encoded binary file encoded as a BYTE[] type.</t>

<t>path.  The element content is a file-system path encoded as a STRING type. </t>

<t>frame.  The element content is a layer-2 frame encoded as a HEXBIN type.</t>

<t>packet.  The element content is a layer-3 packet encoded as a HEXBIN type. </t>

<t>ipv4-packet.  The element content is an IPv4 packet encoded as a HEXBIN type.</t>

<t>ipv6-packet.  The element content is an IPv6 packet encoded as a HEXBIN type. </t>

<t>url.  The element content is of type URL.</t>

<t>csv.  The element content is a common separated value (CSV) list per Section 2 of <xref target="RFC4180" /> encoded as a STRING type.</t>

<t>winreg.  The element content is a Windows registry key encoded as a STRING type.</t>

<t>xml.  The element content is XML.  See <xref target="extending" />.</t>

<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>

<t hangText="ext-dtype"><vspace/>Optional.  STRING.  A means by which to extend the dtype attribute.  See <xref target="extending_enums" />.</t>

<t hangText="meaning"><vspace/>Optional.  STRING.  A free-form description of the element content.</t>

<t hangText="formatid"><vspace/>Optional.  STRING.  An identifier referencing the format and semantics of the element content.
</t>

<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>
</list>
</t>
</section>  <!-- AdditionalData class -->
	
<section title="Contact Class" anchor="Contact">
<t>The Contact class describes contact information for organizations and personnel involved in the incident.  This class allows for the naming of the involved party, specifying contact information for them, and identifying their role in the incident.
</t>
<t>People and organizations are treated interchangeably as contacts; one can be associated with the other using the recursive definition of the class (the Contact class is aggregated into the Contact class).  The 'type' attribute disambiguates the type of contact information being provided.
</t>

<t>
The inheriting definition of Contact provides a way to relate information without requiring the explicit use of identifiers in the classes or duplication of data.  A complete point of contact is derived by a particular traversal from the root Contact class to the leaf Contact class.  As such, multiple points of contact might be specified in a single instance of a Contact class.  Each child
Contact class logically inherits contact information from its ancestors.
</t>

<t>
<figure title="The Contact Class" anchor="figure_contact_class">
<artwork><![CDATA[
+------------------+
| Contact          |
+------------------+
| ENUM role        |<>--{0..1}--[ ContactName    ]
| STRING ext-role  |<>--{0..1}--[ ContactTitle   ]
| ENUM type        |<>--{0..*}--[ Description    ]
| STRING ext-type  |<>--{0..*}--[ RegistryHandle ]
| ENUM restriction |<>--{0..1}--[ PostalAddress  ]
|                  |<>--{0..*}--[ Email          ]
|                  |<>--{0..*}--[ Telephone      ]
|                  |<>--{0..1}--[ Fax            ]
|                  |<>--{0..1}--[ Timezone       ]
|                  |<>--{0..*}--[ Contact        ]
|                  |<>--{0..*}--[ AdditionalData ]
+------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute the Contact class are:

<list style="hanging">

<t hangText="ContactName"><vspace/>Zero or one.  ML_STRING.  The name of the contact.  The contact may either be an organization or a person.  The type attribute disambiguates the semantics.</t>

<t hangText="ContactTitle"><vspace/>Zero or one.  ML_STRING.  The title for the individual named in the ContactName.</t>

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form description of this contact.  In the case of a person, this is often the organizational title of the individual.</t>

<t hangText="RegistryHandle"><vspace/>Zero or more.  A handle name into the registry of the contact.</t>

<t hangText="PostalAddress"><vspace/>Zero or one.  The postal address of the contact.</t>

<t hangText="Email"><vspace/>Zero or more.  The email address of the contact. </t>

<t hangText="Telephone"><vspace/>Zero or more.  The telephone number of the contact.</t>

<t hangText="Fax"><vspace/>Zero or one.  The facsimile telephone number of the contact.</t>

<t hangText="Timezone"><vspace/>Zero or one.  TIMEZONE. The timezone in which the contact resides formatted according to <xref target="dt_timezone" />.</t>

<t hangText="Contact"><vspace/>Zero or more. A Contact instance contained within another Contact instance inherits the values of the parent(s).  This recursive definition can be used to group common data pertaining to multiple points of contact and is especially useful when listing multiple contacts at the same organization.</t>

<t hangText="AdditionalData"><vspace/>Zero or more. A mechanism by which to extend the data model.</t>

</list>
</t>

<t>At least one of the aggregate classes MUST be present in an instance of the Contact class.  This is not enforced in the IODEF schema as there is no simple way to accomplish it.</t>

<t>The Contact class has five attributes:
<list style="hanging">

<t hangText="role"><vspace/>Required.  ENUM.  Indicates the role the contact fulfills.   This attribute is defined as an enumerated list:

<list style="numbers">

<t>creator.  The entity that generate the document.</t>
<t>reporter.  The entity that reported the information.</t>
<t>admin.  An administrative contact or business owner for an asset or organization.</t>
<t>tech.  An entity responsible for the day-to-day management of technical issues for an asset or organization.</t>
<t>provider.  An external hosting provider for an asset.</t>
<t>zone.  An entity with authority over a DNS zone.</t>
<t>user.  An end-user of an asset or part of an organization.</t>
<t>billing.  An entity responsible for billing issues for an asset or organization.</t>
<t>legal.  An entity responsible for legal issue related to an asset or organization.</t>
<t>irt.  An entity responsible for handling security issues for an asset or organization.</t>
<t>abuse.  An entity responsible for handling abuse originating from an asset or organization.</t>
<t>cc.  An entity that is to be kept informed about the events related to an asset or organization.</t>
<t>cc-irt.  A CSIRT or information sharing organization coordinating activity related to an asset or organization.</t>
<t>le.  A law enforcement entity supporting the investigation of activity affecting an asset or organization.</t>
<t>vendor.  The vendor that produces an asset.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>

<t hangText="ext-role"><vspace/>Optional.  STRING.  A means by which to extend the role attribute.  See <xref target="extending_enums" />.</t>

<t hangText="type"><vspace/>Required.  ENUM.  Indicates the type of contact being described. This attribute is defined as an enumerated list:
<list style="numbers">

<t>person. The information for this contact references an individual.</t>

<t>organization. The information for this contact references an organization.</t>

<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>

<t hangText="ext-type"><vspace/>Optional.  STRING.  A means by which to extend the type attribute.  See <xref target="extending_enums" />.</t>

<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in <xref target="Incident" />.</t>

</list></t>

<section title="RegistryHandle Class" anchor="registryhandle">
<t>The RegistryHandle class represents a handle into an Internet registry or community-specific database.  The handle is specified in the element content and the type attribute specifies the database.
</t>

<t>
<figure title="The RegistryHandle Class" anchor="figure_registryhandle_class">
<artwork><![CDATA[
+---------------------+
| RegistryHandle      |
+---------------------+
| STRING              |
|                     |
| ENUM registry       |
| STRING ext-registry |
+---------------------+
]]></artwork>
</figure></t>

<t>The RegistryHandle class has two attributes:
<list style="hanging">
<t hangText="registry"><vspace/>Required.  ENUM.  The database to which
the handle belongs.   The possible values are:

<list style="numbers">
<t>internic.  Internet Network Information Center</t>
<t>apnic.  Asia Pacific Network Information Center</t>
<t>arin.  American Registry for Internet Numbers</t>
<t>lacnic.  Latin-American and Caribbean IP Address Registry</t>
<t>ripe.  Reseaux IP Europeens</t>
<t>afrinic. African Internet Numbers Registry</t>
<t>local.  A database local to the CSIRT</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>
<t hangText="ext-registry"><vspace/>Optional. STRING.  A means by which to extend the registry attribute.  See <xref target="extending_enums" />.</t>
</list>
	</t>

	</section> <!-- RegistryHandle class -->

<section title="PostalAddress Class" anchor="postaladdress">
<t>The PostalAddress class specifies a postal address formatted according to the <xref target="dt_postal_address">POSTAL data type</xref>.</t>

<t>
<figure title="The PostalAddress Class" anchor="figure_postaladdress_class">
<artwork><![CDATA[
+---------------------+
| PostalAddress       |
+---------------------+
| POSTAL              |
|                     |
| ENUM meaning        |
| ENUM lang           |
+---------------------+
]]></artwork>
</figure></t>

<t>The PostalAddress class has two attributes:
<list style="hanging">
<t hangText="meaning"><vspace/>Optional.  ENUM.  A free-form description of the element content.</t>

<t hangText="lang"><vspace/>Optional.  ENUM.  A valid language code per <xref target="RFC4646" /> constrained by the definition of "xs:language".  The interpretation of this code is described in <xref target="internationalization" />. </t>
</list>
</t>
</section> <!-- PostalAddress class -->

<section title="Email Class" anchor="email">
<t>The Email class specifies an email address formatted according to <xref target="dt_email">EMAIL data type</xref>.</t>

<t>
<figure title="The Email Class" anchor="figure_email_class">
<artwork><![CDATA[
+--------------+
| Email        |
+--------------+
| EMAIL        |
|              |
| ENUM meaning |
+--------------+
]]></artwork>
</figure></t>

<t>The Email class has one attribute:
<list style="hanging">
<t hangText="meaning"><vspace/>Optional.  ENUM.  A free-form description of the element content.</t>
</list>
</t>
</section> <!-- Email class -->

<section title="Telephone and Fax Classes" anchor="telephone">
<t>The Telephone and Fax classes specify a voice or fax telephone number respectively, and are formatted according to <xref target="dt_phone">PHONE data type</xref>.</t>

<t>
<figure title="The Telephone and Fax Classes" anchor="figure_telephone_class">
<artwork><![CDATA[
+--------------------+
| {Telephone | Fax } |
+--------------------+
| PHONE              |
|                    |
| ENUM meaning       |
+--------------------+
]]></artwork>
</figure></t>

<t>The Telephone class has one attribute:
<list style="hanging">
<t hangText="meaning"><vspace/>Optional.  ENUM.  A free-form description of the element content (e.g., hours of coverage for a given number).</t>
</list>
</t>
</section> <!-- Telephone class -->

		
</section>  <!-- Contact -->

<section title="Time Classes" anchor="time_classes">
<t>
The data model uses five different classes to represent a timestamp.  Their definition is identical, but each has a distinct name to convey a difference
in semantics.
</t>
<t>
The element content of each class is a timestamp formatted according to the DATETIME data type (see <xref target="dt_date_time" />).
</t>

	<t>
<figure title="The Time Classes" anchor="figure_time_classes">
<artwork><![CDATA[
+----------------------------------+
| {Start| End| Report| Detect}Time |
+----------------------------------+
| DATETIME                         |
+----------------------------------+
]]></artwork>
</figure></t>

	<section title="StartTime Class" anchor="StartTime">
	<t>The StartTime class represents the time the incident began.</t>
	</section>

	<section title="EndTime Class" anchor="EndTime">
	<t>The EndTime class represents the time the incident ended.</t>
	</section>

	<section title="DetectTime Class" anchor="DetectTime">
	<t>The DetectTime class represents the time the first activity of the incident was detected.</t>
	</section>

	<section title="ReportTime Class" anchor="ReportTime">
	<t>The ReportTime class represents the time the incident was reported.  This timestamp MUST be the time at which the IODEF document was generated.
	</t>
	</section>

<section title="DateTime" anchor="DateTime">
<t>The DateTime class is a generic representation of a timestamp.  Infer its semantics from the parent class in which it is aggregated.</t>
	</section>

	</section>  <!-- Time classes -->

<section title="Discovery Class" anchor="Discovery">
<t>The Discovery class describes how an incident was detected.

<figure title="The Discovery Class" anchor="figure_discovery_class">
<artwork><![CDATA[
+-------------------+
| Discovery         |
+-------------------+
| ENUM source       |<>--{0..*}--[ Description      ]
| STRING ext-source |<>--{0..*}--[ Contact          ]
| ENUM restriction  |<>--{0..*}--[ DetectionPattern ]
+-------------------+
]]></artwork>
</figure>
</t>
<t>The Discovery class is composed of three aggregate classes.

<list style="hanging">
<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form text 
description of how this incident was detected.</t>

<t hangText="Contact"><vspace/>Zero or more.  Contact information for the party that discovered the incident.</t> 

<t hangText="DetectionPattern"><vspace/>Zero or more.  Describes an application-specific configuration that detected the incident. 
</t>
</list></t>

<t>The Discovery class has three attribute:
<list style="hanging">

<t hangText="source"><vspace />Optional.  ENUM.  Categorizes the techniques used to discover the incident.  These values are partially derived from Table 3-1 of <xref target="NIST800.61rev2" />.

<list style="numbers">
<t>idps.  Intrusion Detection or Prevention system.</t>
<t>siem.  Security Information and Event Management System.</t>
<t>av.  Antivirus or and antispam software.</t>
<t>file-integrity.  File integrity checking software.</t>
<t>third-party-monitoring.  Contracted third-party monitoring service.</t>
<t>os-log.  Operating system logs.</t>
<t>application-log.  Application logs.</t>
<t>device-log.  Network device logs.</t>
<t>network-flow.  Network flow analysis.</t>
<t>investigation.  Manual investigation initiated based on timely notification of a new vulnerability or exploit.</t>
<t>internal-notification.  A party within the organization discovered the activity</t>
<t>external-notification.  A party outside of the organization discovered the activity.</t>
<t>unknown.  Unknown detection approach.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>

<t hangText="ext-source"><vspace />Optional.  STRING.  A means by which to extend the source attribute.  See <xref target="extending_enums" />.</t>

<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in <xref target="Incident" />.</t>

</list></t>


<section title="DetectionPattern Class" anchor="DetectionPattern">
<t>The DetectionPattern class describes a configuration or signature that can be used by an IDS/IPS, SIEM, anti-virus, end-point protection, network analysis, malware analysis, or host forensics tool to identify a particular phenomenon.  This class requires the identification of the target application and allows the configuration to be describes in either free-form or machine readable form.

<figure title="The DetectionPattern Class" anchor="figure_detectionpattern_class">
<artwork><![CDATA[
+------------------+
| DetectionPattern |
+------------------+
| ENUM restriction |<>----------[ Application            ]
|                  |<>--{0..*}--[ Description            ]
|                  |<>--{0..*}--[ DetectionConfiguration ]
+------------------+
]]></artwork>
</figure>
</t>
<t>The DetectionPattern class is composed of three aggregate classes.

<list style="hanging">
<t hangText="Application"><vspace/>.  One.  The application for which the DetectionConfiguration or Description is being provided.
</t>

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form text 
description of how to use the Application or provided DetectionConfiguration.
</t>

<t hangText="DetectionConfiguration"><vspace/>Zero or more.  STRING.  A machine consumable configuration to find a pattern of activity. 
</t>
</list></t>

<t>Either an instance of the Description or DetectionConfiguration class MUST be present.</t>

<t>The Method class has one attribute:
<list style="hanging">
	<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in 	<xref target="Incident" />.</t>
</list></t>
</section> <!-- DetectionPattern -->

</section> <!-- Discovery -->


<section title="Method Class" anchor="Method">
<t>The Method class describes the tactics, techniques, or procedures used by the intruder in the incident.  This class consists of both a list of references describing the attack method and a free form description.

<figure title="The Method Class" anchor="figure_method_class">
<artwork><![CDATA[
+------------------+
| Method           |
+------------------+
| ENUM restriction |<>--{0..*}--[ Reference      ]
|                  |<>--{0..*}--[ Description    ]
|                  |<>--{0..*}--[ AdditionalData ]
+------------------+
]]></artwork>
</figure>
</t>
<t>The Method class is composed of three aggregate classes.

<list style="hanging">
<t hangText="Reference"><vspace/>Zero or more.  A reference to a vulnerability, malware sample, advisory, or analysis of an attack technique.
</t>

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form text 
description of techniques, tactics, or procedures used by the intruder.
</t>

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model. 
</t>
</list></t>

<t>Either an instance of the Reference or Description class MUST be present.</t>

<t>The Method class has one attribute:
<list style="hanging">
	<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in 	<xref target="Incident" />.</t>
</list></t>
 
<section title="Reference Class" anchor="Reference">
<t>The Reference class is a reference to a vulnerability, IDS alert, malware sample, advisory, or attack technique.  A reference consists of a name, a URL to this reference, and an optional description.
 
<figure title="The Reference Class" anchor="figure_reference_class">
<artwork><![CDATA[
+-------------------------+
| Reference               |
+-------------------------+
| ENUM attacktype         |<>----------[ ReferenceName ]
| STRING ext-attacktype   |<>--{0..*}--[ URL           ]
| ID observable-id        |<>--{0..*}--[ Description   ]
+-------------------------+
]]></artwork>
</figure>
</t>
 
<t>The aggregate classes that constitute Reference:
<list style="hanging">
<t hangText="ReferenceName"><vspace/>One.  ML_STRING.  Name of the reference.</t>

<t hangText="URL"><vspace/>Zero or more.  URL.  A URL associated with the reference.</t>

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form text description of this reference.</t>
							
<t> The Reference class has 3 attributes.
<list style="hanging">								
<t hangText="attacktype"><vspace/>Optional.  ENUM.  TODO.</t>
<t hangText="ext-attacktype"><vspace/>Optional.  STRING.  A mechanism by which to extend the Attack Type.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>
</list>
</t>

</section>  <!--  Reference -->
</section>  <!-- Method class -->

<section title="Assessment Class" anchor="Assessment">
<t>The Assessment class describes the repercussions of the incident to the victim.</t>

<t> 
<figure title="Assessment Class" anchor="figure_assessment_class">
<artwork><![CDATA[
+-------------------------+
| Assessment              |
+-------------------------+ 
| ENUM occurrence         |<>--{0..*}--[ Impact         ]
| ENUM restriction        |<>--{0..*}--[ BusinessImpact ]
| ID observable-id        |<>--{0..*}--[ TimeImpact     ]
|                         |<>--{0..*}--[ MonetaryImpact ]
|                         |<>--{0..*}--[ Counter        ]
|                         |<>--{0..1}--[ Confidence     ]
|                         |<>--{0..*}--[ AdditionalData ]
+-------------------------+
]]></artwork>
</figure>
</t>

<t>The aggregate classes that constitute Assessment are:
<list style="hanging">
<t hangText="Impact"><vspace/>Zero or more.  Technical characterization of the impact of the activity on the victim's enterprise.
</t> 

<t hangText="BusinessImpact"><vspace/>Zero or more.  Impact of the activity on the business functions of the victim organization.
</t> 

<t hangText="TimeImpact"><vspace/>Zero or more.  Impact of the activity measured with respect to time.
</t> 

<t hangText="MonetaryImpact"><vspace/>Zero or more.  Impact of the activity measured with respect to financial loss.
</t> 

<t hangText="Counter"><vspace/>Zero or more.  A counter with which to summarize the magnitude of the activity.</t>

<t hangText="Confidence"><vspace/>Zero or one.  An estimate of confidence in the assessment.
</t> 

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model.
</t> 

</list>
	</t>
<t>A least one instance of the possible three impact classes (i.e., Impact, TimeImpact, or MonetaryImpact) MUST be present.</t>


<t>The Assessment class has three attributes:
<list style="hanging">

<t hangText="occurrence"><vspace />Optional.  ENUM.  Specifies whether the assessment is describing actual or potential outcomes.

<list style="numbers">
<t>actual.  This assessment describes activity that has occurred.</t>
<t>potential.  This assessment describes potential activity that might occur.</t>
</list>
</t>

<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in <xref target="Incident" />.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>

</list></t>

<section title="Impact Class" anchor="impact">

<t>The Impact class allows for categorizing and describing the technical impact of the incident on the network of an organization.</t>

<t>This class is based on <xref target="RFC4765" />.
</t>

<t>
<figure title="Impact Class" anchor="figure_impact_class">
<artwork>
<![CDATA[
+------------------+
| Impact           |
+------------------+ 
| ML_STRING        |
|                  |
| ENUM lang        |
| ENUM severity    |
| ENUM completion  |
| ENUM type        |
| STRING ext-type  |
+------------------+
]]></artwork>
</figure></t>


<t>The element content will be a free-form textual description of the impact.
</t>

<t>The Impact class has five attributes:
<list style="hanging">

<t hangText="lang"><vspace/>Optional.  ENUM.  A valid language code per <xref target="RFC4646" /> constrained by the definition of "xs:language".  The interpretation of this code is described in <xref target="internationalization" />. </t>

<t hangText="severity"><vspace />Optional.  ENUM.  An estimate of the relative severity of the activity.  The permitted values are shown below.  There is no default value.
<list style="numbers">
<t>low.  Low severity</t>
<t>medium. Medium severity</t>
<t>high. High severity</t>
</list>
</t>

<t hangText="completion"><vspace/>Optional.  ENUM.  An indication whether the described activity was successful. The permitted values are shown below.  There is no default value.

<list style="numbers">
<t>failed.  The attempted activity was not successful.</t>
<t>succeeded.  The attempted activity succeeded.</t>
</list></t>

<t hangText="type"><vspace />Required.  ENUM.  Classifies the malicious activity into incident categories.  The permitted values are shown below.  The default value is "other".
<list style="numbers">
<t>admin.  Administrative privileges were attempted.</t>
<t>dos.  A denial of service was attempted.</t>
<t>file. An action that impacts the integrity of a file or database was attempted.</t>
<t>info-leak.  An attempt was made to exfiltrate information.</t>
<t>misconfiguration.  An attempt was made to exploit a mis-configuration in a system.</t>
<t>policy.  Activity violating site's policy was attempted.</t>
<t>recon.  Reconnaissance activity was attempted.</t>
<t>social-engineering.  A social engineering attack was attempted.</t>
<t>user.  User privileges were attempted.</t>
<t>unknown.  The classification of this activity is unknown.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>
<t hangText="ext-type"><vspace />Optional.  STRING.  A means by which to extend the type attribute.  See <xref target="extending_enums" />.</t>

</list></t>

</section> <!-- Impact class -->

<section title="BusinessImpact Class" anchor="businessimpact">

<t>The BusinessImpact class describes and characterizes the degree to which the function of the organization was impacted by the Incident.</t>

<t>The element body describes the impact to the organization as a free-form text string.  The two attributes characterize the impact.</t>

<t>
<figure title="BusinessImpact Class" anchor="figure_businessimpact_class">
<artwork>
<![CDATA[
+-------------------------+ 
| BusinessImpact          | 
+-------------------------+ 
| ML_STRING               | 
|                         | 
| ENUM severity           |
| STRING ext-severity     |
| ENUM type               |
| STRING ext-type         |
+-------------------------+
]]></artwork>
</figure></t>

<t>The element content will be a free-form textual description of the impact to the organization.
</t>

<t>The BusinessImpact class has four attributes:
<list style="hanging">

<t hangText="severity"><vspace />Optional.  ENUM.  Characterizes the severity of the incident on business functions.  The permitted values are shown below.  They were derived from Table 3-2 of <xref target="NIST800.61rev2" />. The default value is "unknown".
<list style="numbers">
<t>none.  No effect to the organization's ability to provide all services to all users.</t>
<t>low.  Minimal effect as the organization can still provide all critical services to all users but has lost efficiency.</t>
<t>medium. The organization has lost the ability to provide a critical service to a subset of system users.</t>
<t>high. The organization is no longer able to provide some critical services to any users.</t>
<t>unknown.  The impact is not known.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>

<t hangText="ext-severity"><vspace/>Optional. STRING.  A means by which to extend the severity attribute.  See <xref target="extending_enums" />.</t>

<t hangText="type"><vspace />Required.  ENUM.  Characterizes the effect this incident had on the business.Classifies the malicious activity into incident categories.  The permitted values are shown below.  There is no default value.
<list style="numbers">
<t>breach-proprietary.  Sensitive or proprietary information was accessed or exfiltrated.</t>
<t>breach-privacy.  Personally identifiable information was accessed or exfiltrated.</t>
<t>loss-of-integrity.  Sensitive or proprietary information was changed or deleted.</t>
<t>loss-of-service. Service delivery was disrupted.</t>
<t>loss-financial.  Money or services were stolen.</t>
<t>degraded-reputation.  The reputation of the organization's brand was diminished.</t>
<t>asset-damage.  A cyber-physical system was damaged.</t>
<t>asset-manipulation.  A cyber-physical system was manipulated.</t>
<t>legal.  Incident resulted in legal or regulatory action</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>
<t hangText="ext-type"><vspace />Optional.  STRING.  A means by which to extend the type attribute.  See <xref target="extending_enums" />.</t>
</list></t>

</section> <!-- BusinessImpact class -->


<section title="TimeImpact Class" anchor="timeimpact">
<t>The TimeImpact class describes the impact of the incident on an organization as a function of time.  It provides a way to convey down time and recovery time.
</t>

<t>
<figure title="TimeImpact Class" anchor="figure_time_impact_class">
<artwork>
<![CDATA[
+---------------------+
| TimeImpact          |
+---------------------+ 
| REAL                |
|                     |
| ENUM severity       |
| ENUM metric         |
| STRING ext-metric   |
| ENUM duration       |
| STRING ext-duration |
+---------------------+
		]]></artwork>
	</figure></t>

	<t>
The element content is a positive, floating point (REAL) number specifying a unit of time.  The duration and metric attributes will imply the semantics of the element content.
</t>

<t>The TimeImpact class has five attributes:
<list style="hanging">

<t hangText="severity"><vspace />Optional.  ENUM.  An estimate of the relative severity of the activity.  The permitted values are shown below.  There is no default value. 
	<list style="numbers">
		<t>low.  Low severity</t>
		<t>medium. Medium severity</t>
		<t>high. High severity</t>
	</list></t>

	<t hangText="metric"><vspace/>Required.  ENUM.  Defines the metric in which the time is expressed.  The permitted values are shown below.  There is no default value.
	<list style="numbers">
<t>labor.  Total staff-time to recovery from the activity (e.g., 2 employees working 4 hours each would be 8 hours).</t>
<t>elapsed.  Elapsed time from the beginning of the recovery to its completion (i.e., wall-clock time).</t>
<t>downtime.  Duration of time for which some provided service(s) was not available.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
	</list></t>

<t hangText="ext-metric"><vspace/>Optional. STRING.  A means by which to extend the metric attribute.  See <xref target="extending_enums" />.</t>

<t hangText="duration"><vspace />Optional.  ENUM.  Defines a unit of time, that when combined with the metric attribute, fully describes a metric of impact that will be conveyed in the element content.  The permitted values are shown below.  The default value is "hour".

<list style="numbers">
<t>second.  The unit of the element content is seconds.</t>
<t>minute.  The unit of the element content is minutes.</t>
<t>hour. The unit of the element content is hours.</t>
<t>day.  The unit of the element content is days.</t>
<t>month.  The unit of the element content is months.</t>
<t>quarter.  The unit of the element content is quarters.</t>
<t>year.  The unit of the element content is years.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>

<t hangText="ext-duration"><vspace />Optional.  STRING.  A means by which to extend the duration attribute.  See <xref target="extending_enums" />.</t>

  </list></t>
</section> <!-- TimeImpact -->

<section title="MonetaryImpact Class" anchor="monetaryimpact">
<t>The MonetaryImpact class describes the financial impact of the activity on an organization.  For example, this impact may consider losses due to the cost of the investigation or recovery, diminished productivity of the staff, or a tarnished reputation that will affect future opportunities.
</t>

<t>
<figure title="MonetaryImpact Class" anchor="figure_monetary_impact_class">
<artwork><![CDATA[
+------------------+
| MonetaryImpact   |
+------------------+ 
| REAL             |
|                  |
| ENUM severity    |
| STRING currency  |
+------------------+
]]></artwork>
</figure></t>
	
<t>
The element content is a positive, floating point number (REAL) specifying a unit of currency described in the currency attribute.
</t>

<t>The MonetaryImpact class has two attributes:
<list style="hanging">


<t hangText="severity"><vspace />Optional.  ENUM.  An estimate of the relative severity of the activity.  The permitted values are shown below.  There is no default value. 
	<list style="numbers">
		<t>low.  Low severity</t>
		<t>medium. Medium severity</t>
		<t>high. High severity</t>
	</list></t>

<t hangText="currency"><vspace />Optional.  STRING.  Defines the currency in which the monetary impact is expressed.  The permitted values are defined in "Codes for the representation of currencies and funds" of <xref target="ISO4217" />.  There is no default value.</t>
</list></t>

</section> <!-- MoneyImpact -->

<section title="Confidence Class" anchor="Confidence">

<t>The Confidence class represents a best estimate of the validity and accuracy of the described impact (see <xref target="Assessment" />) of the incident activity.  This estimate can be expressed as a category or a numeric calculation.
</t>

<t>This class if based upon <xref target="RFC4765" />.
</t>

<t>
<figure title="Confidence Class" anchor="figure_confidence_class">
<artwork>
<![CDATA[
+------------------+
| Confidence       |
+------------------+ 
| REAL             |
|                  |
| ENUM rating      |
+------------------+
		]]></artwork>
</figure></t>

<t>The element content expresses a numerical assessment in the confidence of the data when the value of the rating attribute is "numeric".  Otherwise, this element MUST be empty.
</t>

<t>The Confidence class has one attribute.
<list style="hanging">
<t hangText="rating"><vspace />Required.  ENUM.  A rating of the analytical validity of the specified Assessment. The permitted values are shown below.  There is no default value. 
<list style="numbers">
<t>low.  Low confidence in the validity.</t>
<t>medium. Medium confidence in the validity.</t>
<t>high. High confidence in the validity.</t>
<t>numeric.  The element content contains a number that conveys the confidence of the data.  The semantics of this number outside the scope of this specification.</t>
<t>unknown.  The confidence rating value is not known.</t>								
</list></t>
</list>
</t>

</section> <!-- Confidence class -->

</section> <!-- Assessment class -->



<section title="History Class" anchor="History">
<t>The History class is a log of the significant events or actions performed by the involved parties during the course of handling the incident.
</t>
<t>The level of detail maintained in this log is left up to the discretion of those handling the incident.  
</t>
<t>
<figure title="The History Class" anchor="figure_history_class">
<artwork><![CDATA[
+------------------+
| History          |
+------------------+
| ENUM restriction |<>--{1..*}--[ HistoryItem ]
|                  |
+------------------+        
]]></artwork></figure></t>

<t>The class that constitutes History is:
<list style="hanging">
<t hangText="HistoryItem"><vspace/>One or many.  Entry in the history log of significant events or actions performed by the involved parties.
</t> 
</list>

	</t>

	<t>The History class has one attribute:
	<list style="hanging">
		<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in 
		<xref target="Incident" />.  The default value is "default".</t>
	</list></t>

<section title="HistoryItem Class" anchor="HistoryItem">
<t>The HistoryItem class is an entry in the <xref target="History">History</xref> log that documents a particular action or event that occurred in the course of handling the incident.  The details of the entry are a free-form description, but each can be categorized with the type attribute.
</t>

<t>
<figure title="HistoryItem Class" anchor="figure_historyitem_class">
<artwork><![CDATA[
+-------------------------+
| HistoryItem             |
+-------------------------+ 
| ENUM restriction        |<>----------[ DateTime       ]
| ENUM action             |<>--{0..1}--[ IncidentId     ]
| STRING ext-action       |<>--{0..1}--[ Contact        ]
| ID observable-id        |<>--{0..*}--[ Description    ]
|                         |<>--{0..*}--[ AdditionalData ]
+-------------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute HistoryItem are:
<list style="hanging">

<t hangText="DateTime"><vspace/>One.  Timestamp of this entry in the history log (e.g., when the action described in the Description was taken).
</t> 

<t hangText="IncidentID"><vspace/>Zero or One.  In a history log created by multiple parties, the IncidentID provides a mechanism to specify which CSIRT created a particular entry and references this organization's incident tracking number.  When a single organization is maintaining the log, this class can be ignored.
</t> 

<t hangText="Contact"><vspace/>Zero or One.  Provides contact information for the person that performed the action documented in this class.
</t> 

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form textual description of the action or event.
</t> 

<t hangText="DefinedCOA"><vspace/>Zero or more.  ML_STRING.  A unique identifier meaningful to the sender and recipient of this document that references a course of action.  This class MUST be present if the action attribute is set to "defined-coa".</t>

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model.</t> 
</list>
</t>

<t>The HistoryItem class has four attributes:
<list style="hanging">

<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>

<t hangText="action"><vspace/>Required.  ENUM.  Classifies a performed
action or occurrence documented in this history log entry.  As
activity will likely have been instigated either through a previously
conveyed expectation or internal investigation, this attribute is
identical to the category attribute of the Expectation class.  The difference is only one of tense.  When an action is in this class, it has been completed.  See <xref target="Expectation" />.</t>

<t hangText="ext-action"><vspace/>Optional.  STRING.  A means by which to extend the action attribute.  See <xref target="extending_enums" />.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>
</section>

</section> <!-- History class -->

<section title="EventData Class" anchor="EventData">
<t>The EventData class describes a particular event of the incident for a given set of hosts or networks.  This description includes the systems from which the activity originated and those targeted, an assessment of the techniques used by the intruder, the impact of the activity on the organization, and any forensic evidence discovered.
</t>

<t>
<figure title="The EventData Class" anchor="figure_eventdata_class">
<artwork><![CDATA[
+-------------------------+
| EventData               |
+-------------------------+
| ENUM restriction        |<>--{0..*}--[ Description    ]
| ID observable-id        |<>--{0..1}--[ DetectTime     ]
|                         |<>--{0..1}--[ StartTime      ]
|                         |<>--{0..1}--[ EndTime        ]
|                         |<>--{0..*}--[ Contact        ]
|                         |<>--{0..*}--[ Discovery      ]
|                         |<>--{0..1}--[ Assessment     ]
|                         |<>--{0..*}--[ Method         ]
|                         |<>--{0..*}--[ Flow           ]
|                         |<>--{0..*}--[ Expectation    ]
|                         |<>--{0..1}--[ Record         ]
|                         |<>--{0..*}--[ EventData      ]
|                         |<>--{0..*}--[ AdditionalData ]
+-------------------------+
]]></artwork></figure></t>

<t>The aggregate classes that constitute EventData are:
<list style="hanging">

<t hangText="Description"><vspace/> Zero or more.  ML_STRING.  A free-form textual description of the event.</t> 

<t hangText="DetectTime"><vspace/>Zero or one.  The time the event was detected.</t>

<t hangText="StartTime"><vspace/>Zero or one.  The time the event started.</t>

<t hangText="EndTime"><vspace/>Zero or one.  The time the event ended.</t>

<t hangText="Contact"><vspace/>Zero or more.  Contact information for the parties involved in the event.</t>

<t hangText="Discovery"><vspace/>Zero or more.  The means by which the event was detected.</t>

<t hangText="Assessment"><vspace/>Zero or one.  The impact of the event on the target and the actions taken.</t>

<t hangText="Method"><vspace/>Zero or more.  The technique used by the intruder in the event.</t>

<t hangText="Flow"><vspace/>Zero or more.  A description of the systems or networks involved.</t>

<t hangText="Expectation"><vspace/>Zero or more.  The expected action to be performed by the recipient for the described event.</t>

<t hangText="Record"><vspace/>Zero or one.  Supportive data (e.g., log files) that provides additional information about the event.</t>

<t hangText="EventData"><vspace/>Zero or more.  EventData instances contained within another  EventData instance inherit the values of the parent(s); this recursive definition can be used to group common data pertaining to multiple events. When EventData elements are defined recursively, only the leaf instances (those EventData instances not containing other EventData instances) represent actual events.</t>

<t hangText="AdditionalData"><vspace/>Zero or more.  An extension mechanism for
data not explicitly represented in the data model.</t>
	</list>
   </t>

<t>At least one of the aggregate classes MUST be present in an instance of the EventData class.  This is not enforced in the IODEF schema as there is no simple way to accomplish it.</t>

	
<t>The EventData class has two attributes:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in <xref target="Incident" />.  The default value is "default".</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
	
					</list></t>

<section title="Relating the Incident and EventData Classes" anchor="Incident_Event">

<t>There is substantial overlap in the Incident and EventData classes. Nevertheless, the semantics of these classes are quite different.  The Incident class provides summary information about the entire incident, while the EventData class provides information about the individual events comprising the incident.  In the most common case, the EventData class will provide more specific information for the general description provided in the Incident class.  However, it may also be possible that the overall summarized information about the incident conflicts with some individual information in an EventData class when there is a substantial composition of various events in the incident.  In such a case, the interpretation of the more specific EventData MUST supersede the more generic information provided in Incident.
</t>
</section>

<section title="Cardinality of EventData" anchor="eventdata_cardinality">

<t>The EventData class can be thought of as a container for the properties of an event in an incident.  These properties include: the hosts involved, impact of the incident activity on the hosts, forensic logs, etc.  With an instance of the EventData class, hosts 	(i.e., System class) are grouped around these common properties.

</t>

<t>The recursive definition (or instance property inheritance) of the EventData class (the EventData class is aggregated into the EventData class) provides a way to relate information without requiring the explicit use of unique attribute identifiers in the classes or duplicating information.  Instead, the relative depth (nesting) of a class is used to group (relate) information.
</t>

<t>
For example, an EventData class might be used to describe two machines involved in an incident.  This description can be achieved using multiple instances of the Flow class.  It happens that there is a common technical contact (i.e., Contact class) for these two machines, but the impact (i.e., Assessment class) on them is different.  A depiction of the representation for this situation can be found in <xref target="figure_reventdata_class" />.
</t>

<t>
<figure title="Recursion in the EventData Class" anchor="figure_reventdata_class">
<artwork><![CDATA[
+------------------+
| EventData        |
+------------------+
|                  |<>----[ Contact    ]
|                  |
|                  |<>----[ EventData  ]<>----[ Flow     ]
|                  |      [            ]<>----[ Assessment ]
|                  |
|                  |<>----[ EventData  ]<>----[ Flow     ]
|                  |      [            ]<>----[ Assessment ]
+------------------+
	]]></artwork></figure></t>
	</section>

	</section>  <!-- Eventdata -->

<section title="Expectation Class" anchor="Expectation">
<t>The Expectation class conveys to the recipient of the IODEF document the actions the sender is requesting.  The scope of the requested action is limited to purview of the EventData class in which this class is aggregated.

	<figure title="The Expectation Class" anchor="figure_expectation_class">
		<artwork><![CDATA[
+-------------------------+
| Expectation             |
+-------------------------+ 
| ENUM restriction        |<>--{0..*}--[ Description ]
| ENUM severity           |<>--{0..*}--[ DefinedCOA  ]
| ENUM action             |<>--{0..1}--[ StartTime   ]
| STRING ext-action       |<>--{0..1}--[ EndTime     ]
| ID observable-id        |<>--{0..1}--[ Contact     ]
+-------------------------+
		]]></artwork>
	</figure></t>

<t>The aggregate classes that constitute Expectation are:


<list style="hanging">
<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form description of the desired action(s).</t>

<t hangText="DefinedCOA"><vspace/>Zero or more.  ML_STRING.  A unique identifier meaningful to the sender and recipient of this document that references a course of action.  This class MUST be present if the action attribute is set to "defined-coa".</t>

<t hangText="StartTime"><vspace/>Zero or one.  The time at which the sender would like the action performed.  A timestamp that is earlier than the ReportTime specified in the Incident class denotes that the sender would like the action performed as soon as possible.  The absence of this element indicates no expectations of when the recipient would like the action performed.</t>

<t hangText="EndTime"><vspace/>Zero or one.  The time by which the sender expects the recipient to complete the action.  If the recipient cannot complete the action before EndTime, the recipient MUST NOT carry out the action.  Because of transit delays, clock drift, and so on, the sender MUST be prepared for the recipient to have carried out the action, even if it completes past EndTime.</t>

<t hangText="Contact"><vspace/>Zero or one.  The expected actor for the action.</t>
</list></t>
	
<t>The Expectations class has five attributes:
<list style="hanging">

<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in 
<xref target="Incident" />.  The default value is "default".</t>
<t hangText="severity"><vspace/>Optional.  ENUM.  Indicates the desired priority
of the action.   This attribute is an enumerated list with no default value, and the semantics of these relative measures are context dependent.

<list style="numbers">
<t>low.  Low priority</t>
<t>medium. Medium priority</t>
<t>high. High priority</t>
</list></t>

<t hangText="action"><vspace/>Optional.  ENUM.  Classifies the type of
action requested.  This attribute is an enumerated list with a default value of "other".

<list style="numbers">
<t>nothing.  No action is requested.  Do nothing with the information.</t>
<t>contact-source-site.  Contact the site(s) identified as the source of the activity.</t>
<t>contact-target-site.  Contact the site(s) identified as the target of the activity.</t>
<t>contact-sender.  Contact the originator of the document.</t>
<t>investigate.  Investigate the systems(s) listed in the event.</t>
<t>block-host.  Block traffic from the machine(s) listed as sources the event.</t>
<t>block-network. Block traffic from the network(s) lists as sources in the event.</t>
<t>block-port. Block the port listed as sources in the event.</t>
<t>rate-limit-host.  Rate-limit the traffic from the machine(s) listed as sources in the event.</t>
<t>rate-limit-network. Rate-limit the traffic from the network(s) lists as sources in the event.</t>
<t>rate-limit-port. Rate-limit the port(s) listed as sources in the event.</t>
<t>upgrade-software.  Upgrade or patch the software or firmware on an asset.</t>
<t>rebuild-asset.  Reinstall the operating system and applications on an asset.</t>
<t>remediate-other. Remediate the activity in a way other than by rate limiting or blocking.</t>
<t>status-triage.  Conveys receipts and the triaging of an incident.</t>
<t>status-new-info.  Conveys that new information was received for this incident.</t>
<t>watch-and-report.  Watch for the described activity and share if seen.</t>
<t>defined-coa.  Perform a predefined course of action (COA).  The COA is named in the DefinedCOA class.</t>
<t>other.  Perform some custom action described in the Description class.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>

<t hangText="ext-action"><vspace/>Optional.  STRING.  A means by which to extend the action attribute.  See <xref target="extending_enums" />.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>

</list></t>
	
</section>  <!-- Expectation -->

<section title="Flow Class" anchor="Flow">
<t>The Flow class groups related the source and target hosts.
</t>

<t>
<figure title="The Flow Class" anchor="figure_flow_class">
<artwork><![CDATA[
+------------------+
| Flow             |
+------------------+
|                  |<>--{1..*}--[ System   ]
+------------------+
]]></artwork>
</figure></t>

<t>The aggregate class that constitutes Flow is:

<list style="hanging">
<t hangText="System"><vspace/>One or More. A host or network involved in an event.</t>
</list>
</t>

<t>The Flow class has no attributes.</t>

</section> <!-- Flow -->

<section title="System Class" anchor="System">
<t>
The System class describes a system or network involved in an event.  The systems or networks represented by this class are categorized according to the role they played in the incident through the category attribute.  The value of this category attribute dictates the semantics of the aggregated classes in the System class.  If the category attribute has a value of "source", then the aggregated classes denote the machine and service from which the activity is originating.  With a category attribute value of "target" or "intermediary", then the machine or service is the one targeted in the activity.  A value of "sensor" dictates that this System was part of an instrumentation to monitor the network.

<figure title="The System Class" anchor="figure_system_class">
<artwork><![CDATA[
+---------------------+
| System              |
+---------------------+
| ENUM restriction    |<>----------[ Node            ]
| ENUM category       |<>--{0..*}--[ Service         ]
| STRING ext-category |<>--{0..*}--[ OperatingSystem ]
| STRING interface    |<>--{0..*}--[ Counter         ]
| ENUM spoofed        |<>--{0..*}--[ AssetID         ]
| ENUM virtual        |<>--{0..*}--[ Description     ]
| ENUM ownership      |<>--{0..*}--[ AdditionalData  ]
| ENUM ext-ownership  |
+---------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute System are:

<list style="hanging">
<t hangText="Node"><vspace/>One.  A host or network involved in the incident.</t>

<t hangText="Service"><vspace/>Zero or more.  A network service running on the system.</t>

<t hangText="OperatingSystem"><vspace/>Zero or more.  The operating system running on the system.</t>

<t hangText="Counter"><vspace/>Zero or more.  A counter with which to summarize properties of this host or network.</t>

<t hangText="AssetID"><vspace/>Zero or more.  An asset identifier for the System.</t>

<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  A free-form text description of the System.</t>

<t hangText="AdditionalData"><vspace/>Zero or more.  A mechanism by which to extend the data model.</t> 
</list>
</t>

<t>The System class has eight attributes:
<list style="hanging">

<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute is defined in <xref target="Incident" />.</t>

<t hangText="category"><vspace/>Optional.  ENUM.  Classifies the role the host or network played in the incident.  The possible values are:
<list style="numbers">

<t>source.  The System was the source of the event.</t>
<t>target.  The System was the target of the event.</t>
<t>intermediate.  The System was an intermediary in the event.</t>
<t>sensor.  The System was a sensor monitoring the event.</t>
<t>infrastructure.  The System was an infrastructure node of IODEF document exchange.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>

<t hangText="ext-category"><vspace/>Optional. STRING.  A means by which to extend the category attribute.  See <xref target="extending_enums" />.</t>
<t hangText="interface"><vspace/>Optional.  STRING.  Specifies the interface on which the event(s) on this System originated.  If the Node class specifies a network rather than a host, this attribute has no meaning.
</t>

<t hangText="spoofed"><vspace/>Optional.  ENUM.  An indication of confidence in whether this System was the true target or attacking host.  The permitted values for this attribute are shown below.  The default value is "unknown".

<list style="numbers">
<t>unknown.  The accuracy of the category attribute value is unknown.</t>

<t>yes.  The category attribute value is probably incorrect.  In the case of a source, the System is likely a decoy; with a target, the System was likely not the intended victim.</t>

<t>no.  The category attribute value is believed to be correct.</t>
</list>
</t>

<t hangText="virtual"><vspace/>Optional.  ENUM.  Indicates whether this System is a virtual or physical device.  The default value is "unknown".  The possible values are:

<list style="numbers">
<t>yes.  The System is a virtual device.</t>
<t>no.  The System is a physical device.</t>
<t>unknown.  It is not known if the System is virtual.</t>
</list>
</t>

<t hangText="ownership"><vspace/>Optional.  ENUM.  Describes the ownership of this System relative to the sender of the IODEF document.  The possible values are:

<list style="numbers">
<t>organization.  The System is owned by the organization.</t>
<t>personal.  The System is owned by employee or affiliate of the organization.</t>
<t>partner.  The System is owned by a partner of the organization.</t>
<t>customer.  The System is owned by a customer of the organization.</t>
<t>no-relationship.  The System is owned by an entity that has no known relationship with the organization.</t>
<t>unknown.  The ownership of the System is unknown.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>

<t hangText="ext-ownership"><vspace/>Optional. STRING.  A means by which to extend the ownership attribute.  See <xref target="extending_enums" />.</t>

</list></t>

</section> <!-- System -->

<section title="Node Class" anchor="Node">
<t>The Node class names an asset or network.</t>

<t>This class was derived from <xref target="RFC4765"/>.</t>

<t>
<figure title="The Node Class" anchor="figure_node_class">
<artwork><![CDATA[
+---------------+
| Node          |
+---------------+
|               |<>--{0..*}--[ DomainData    ]
|               |<>--{0..*}--[ Address       ]
|               |<>--{0..1}--[ PostalAddress ]
|               |<>--{0..1}--[ Location      ]
|               |<>--{0..1}--[ DateTime      ]
|               |<>--{0..*}--[ NodeRole      ]
|               |<>--{0..*}--[ Counter       ]
+---------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute Node are:
<list style="hanging">

<t hangText="DomainData"><vspace/>Zero or more.  The detailed domain (DNS) information associated with this Node.  If an Address is not provided, at least one DomainData MUST be specified.
</t>

<t hangText="Address"><vspace/>Zero or more.  The hardware, network, or application address of the Node.  If a DomainData is not provided, at least one Address MUST be specified.

</t>

<t hangText="PostalAddress"><vspace/>Zero or one.  The postal address of the asset.
</t>

<t hangText="Location"><vspace/>Zero or one.  ML_STRING.  A free-from description of the physical location of the Node.  This description may provide a more detailed description of where in the PostalAddress this Node is found (e.g., room number, rack number, slot number in a chassis).
</t>

<t hangText="NodeRole"><vspace/>Zero or more.  The intended purpose of the Node.</t>

<t hangText="Counter"><vspace/>Zero or more.  A counter with which to summarizes properties of this host or network.</t>
</list>
</t>
<t>The Node class has no attributes.</t>

<section title="Address Class" anchor="Address">
<t>The Address class represents a hardware (layer-2), network (layer-3), or application (layer-7) address.
</t>

<t>This class was derived from <xref target="RFC4765" />.
	</t>
<t>
<figure title="The Address Class" anchor="figure_address_class">
<artwork><![CDATA[
+-------------------------+
| Address                 |
+-------------------------+  
| ENUM category           |
| STRING ext-category     |
| STRING vlan-name        |
| INTEGER vlan-num        |
| ID observable-id        |
+-------------------------+
]]></artwork>
</figure></t>

<t>The Address class has five attributes:
<list style="hanging">
<t hangText="category"><vspace/>Optional.  ENUM.  The type of address represented.  The permitted values for this attribute are shown below.  The default value is "ipv4-addr".

<list style="numbers">
<t>asn.  Autonomous System Number</t>
<t>atm.  Asynchronous Transfer Mode (ATM) address</t>
<t>e-mail.   Electronic mail address (RFC 822)</t>
<t>ipv4-addr.  IPv4 host address in dotted-decimal notation (a.b.c.d)</t>
<t>ipv4-net.  IPv4 network address in dotted-decimal notation, slash, significant bits (a.b.c.d/nn)</t>
<t>ipv4-net-mask.  IPv4 network address in dotted-decimal notation, slash, network mask in dotted-decimal notation (a.b.c.d/w.x.y.z)</t>
<t>ipv6-addr.  IPv6 host address</t>
<t>ipv6-net.  IPv6 network address, slash, significant bits</t>
<t>ipv6-net-mask.  IPv6 network address, slash, network mask</t>
<t>mac.  Media Access Control (MAC) address</t>
<t>site-uri.  A URL or URI for a resource.</t>									
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>

</list>
</t>
<t hangText="ext-category"><vspace/>Optional.  STRING.  A means by which to extend the category attribute.  See <xref target="extending_enums" />.</t>
<t hangText="vlan-name"><vspace/>Optional.  STRING.  The name of the Virtual LAN to which the address belongs.</t>
<t hangText="vlan-num"><vspace/>Optional.  STRING.  The number of the Virtual LAN to which the address belongs.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>
</section> <!-- Address class -->

<section title="NodeRole Class" anchor="NodeRole">
<t>The NodeRole class describes the intended function performed by a particular host.</t>

<t>
<figure title="The NodeRole Class" anchor="figure_noderole_class">
<artwork><![CDATA[
+---------------------+
| NodeRole            |
+---------------------+
| ENUM category       |
| STRING ext-category |
| ENUM lang           |
+---------------------+
]]></artwork>
</figure></t>

<t>The NodeRole class has three attributes:</t>

<t>
<list style="hanging">
<t hangText="category"><vspace />Required.  ENUM.  Functionality provided by a node. 
<list style="numbers">
<t>client.  Client computer</t>
<t>client-enterprise.  Client computer on the enterprise network</t>
<t>client-partner.  Client computer on network of a partner</t>
<t>client-remote.  Client computer remotely connected to the enterprise network</t>
<t>client-kiosk.  Client computer is serves as a kiosk</t>
<t>client-mobile.  Client is a mobile device</t>
<t>server-internal.  Server with internal services</t>
<t>server-public.  Server with public services</t>
<t>www.  WWW server</t>
<t>mail.  Mail server</t>
<t>messaging.  Messaging server (e.g., NNTP, IRC, IM)</t>
<t>streaming.  Streaming-media server</t>
<t>voice.  Voice server (e.g., SIP, H.323)</t>
<t>file.  File server (e.g., SMB, CVS, AFS)</t>
<t>ftp.  FTP server</t>
<t>p2p.  Peer-to-peer node</t>
<t>name.  Name server (e.g., DNS, WINS)</t>
<t>directory.  Directory server (e.g., LDAP, finger, whois)</t>
<t>credential.  Credential server (e.g., domain controller, Kerberos)</t>
<t>print.  Print server</t>
<t>application.  Application server</t>
<t>database.  Database server</t>
<t>backup.  Backup server</t>
<t>dhcp.  DHCP server</t>
<t>infra.  Infrastructure server (e.g., router, firewall, DHCP)</t>
<t>infra-firewall.  Firewall</t>
<t>infra-router.  Router</t>
<t>infra-switch.  Switch</t>
<t>camera.  Camera server</t>
<t>proxy.  Proxy server</t>
<t>remote-access.  Remote access server</t>
<t>log.  Log server (e.g., syslog)</t>
<t>virtualization.  Server running virtual machines</t>
<t>pos.  Point-of-sale device</t>
<t>scada. Supervisory control and data acquisition system</t>
<t>scada-supervisory. Supervisory system for a SCADA</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>	

<t hangText="ext-category"><vspace />Optional.  STRING.  A means by which to extend the category attribute.  See <xref target="extending_enums" />.</t> 

<t hangText="lang"><vspace/>Optional.  ENUM.  A valid language code per <xref target="RFC4646" /> constrained by the definition of "xs:language".  The interpretation of this code is described in <xref target="internationalization" />. </t>

</list>
</t>

</section> <!-- NodeRole class -->

<section title="Counter Class" anchor="Counter">
<t>The Counter class summarize multiple occurrences of some event, or conveys counts or rates on various features (e.g., packets, sessions, events).
</t>

<t>The value of the counter is the element content with its units represented in the type attribute.  A rate for a given feature can be expressed by setting the duration attribute.  The complete semantics are entirely context dependent based on the class in which the Counter is aggregated.</t>

<t>
<figure title="The Counter Class" anchor="figure_counter_class">
<artwork><![CDATA[
+---------------------+
| Counter             |
+---------------------+
| REAL                |
|                     |
| ENUM type           |
| STRING ext-type     |
| STRING meaning      |
| ENUM duration       |
| STRING ext-duration |
+---------------------+
]]></artwork>
</figure></t>

<t>The Counter class has five attribute:
<list style="hanging">

<t hangText="type"><vspace/>Required.  ENUM.  Specifies the units of the element content.

<list style="numbers">
<t>byte.  Count of bytes.</t>
<t>packet.  Count of packets.</t>
<t>flow.  Count of network flow records.</t>
<t>session.  Count of sessions.</t>
<t>alert.  Count of notifications generated by another system (e.g., IDS or SIM).</t>
<t>message.  Count of messages (e.g., mail messages).</t>
<t>event.  Count of events.</t>
<t>host.  Count of hosts.</t>
<t>site.  Count of site.</t>
<t>organization.  Count of organizations.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>

</list>
</t>

<t hangText="ext-type"><vspace/>Optional.  STRING.  A means by which to extend the type attribute.  See <xref target="extending_enums" />.</t>

<t hangText="meaning"><vspace/>Optional.  STRING.  A free-form description of the metric represented by the Counter.</t>

<t hangText="duration"><vspace/>Optional.  ENUM.  If present, the Counter class represents a rate  rather than a count over the entire event. In that case, this attribute specifies the denominator of the rate (where the type attribute specified the nominator).  The possible values of this attribute are defined in <xref target="timeimpact" /></t>

<t hangText="ext-duration"><vspace/>Optional.  STRING.  A means by which to extend the duration attribute.  See <xref target="extending_enums" />.</t>

</list>
</t>

</section> <!-- Counter -->

</section> <!-- Node class-->

<section title="DomainData Class" anchor="DomainData">
<t>The DomainData class describes a domain name and meta-data associated with this domain.</t>

<t>
<figure title="The DomainData Class" anchor="figure_domaindata_class">
<artwork><![CDATA[
+--------------------------+
| DomainData               |
+--------------------------+
| ENUM system-status       |<>----------[ Name                 ]
| STRING ext-system-status |<>--{0..1}--[ DateDomainWasChecked ]
| ENUM domain-status       |<>--{0..1}--[ RegistrationDate     ]
| STRING ext-domain-status |<>--{0..1}--[ ExpirationDate       ]
| ID observable-id         |<>--{0..*}--[ RelatedDNS           ]
|                          |<>--{0..*}--[ Nameservers          ]
|                          |<>--{0..1}--[ DomainContacts       ]
|                          |
+--------------------------+
]]></artwork></figure></t>

<t>The aggregate classes that constitute DomainData are:
<list style="hanging">

<t hangText="Name"><vspace/>One.  ML_STRING.  The domain name of the Node (e.g., fully qualified domain name).</t>

<t hangText="DateDomainWasChecked"><vspace/>Zero or one.  DATETIME.  A timestamp of when the Name was resolved.</t>

<t hangText="RegistrationDate"><vspace/>Zero or one.  DATETIME.  A timestamp of when domain listed in Name was registered.</t>

<t hangText="ExpirationDate"><vspace/>Zero or one.  DATETIME.  A timestamp of when the domain listed in Name is set to expire.</t>

<t hangText="RelatedDNS"><vspace/>Zero or more.  Additional DNS records associated with this domain.</t>

<t hangText="Nameservers"><vspace/>Zero or more.  The name servers identified for the domain listed in Name.</t>

<t hangText="DomainContacts"><vspace/>Zero or one.  Contact information for the domain listed in Name supplied by the registrar or through a whois query.</t>

</list>
</t>

<t>The DomainData class has five attribute:
<list style="hanging">

<t hangText="system-status"><vspace/>Required.  ENUM.  Assesses the domain's involvement in the event.

<list style="numbers">
<t>spoofed.  This domain was spoofed.</t>
<t>fraudulent. This domain was operated with fraudulent intentions.</t>
<t>innocent-hacked. This domain was compromised by a third party.</t>
<t>innocent-hijacked. This domain was deliberately hijacked.</t>
<t>unknown.  No categorization for this domain known. </t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>
<t hangText="ext-system-status"><vspace/>Optional.  STRING.  A means by which to extend the system-status attribute.  See <xref target="extending_enums" />.</t>

<t hangText="domain-status"><vspace/>Required.  ENUM.  Categorizes the registry status of the domain at the time the document was generated.  These values and their associated descriptions are derived from Section 3.2.2 of <xref target="RFC3982" />.

<list style="numbers">
<t>reservedDelegation.  The domain is permanently inactive.</t>
<t>assignedAndActive.  The domain is in a normal state.</t>
<t>assignedAndInactive.  The domain has an assigned registration but the delegation is inactive.</t>
<t>assignedAndOnHold.  The domain is under dispute.</t>
<t>revoked.  The domain is in the process of being purged from the database.</t>
<t>transferPending.  The domain is pending a change in authority.</t>
<t>registryLock.  The domain is on hold by the registry.</t>
<t>registrarLock.  Same as "registryLock".</t>
<t>other.  The domain has a known status but it is not one of the redefined enumerated values. </t>
<t>unknown.  The domain has an unknown status.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>
<t hangText="ext-domain-status"><vspace/>Optional.  STRING.  A means by which to extend the system-status attribute.  See <xref target="extending_enums" />.</t>

<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>

<section title="RelatedDNS" anchor="RelatedDNS">
<t>The RelatedDNS class describes additional record types associated with a given domain name.  The record type is described in the record-type attribute and the value of the record is the element content. ... TODO Issue #39 ...</t>
<t>
<figure title="The RelatedDNS Class" anchor="figure_relateddns_class">
<artwork><![CDATA[
+----------------------+
| RelatedDNS           |
+----------------------+
| STRING               |
|                      |
| ENUM record-type     |
| ENUM ext-record-type |
+----------------------+
]]></artwork></figure></t>

<t>The RelatedDNS class has two attribute:
<list style="hanging">

<t hangText="record-type"><vspace/>Required.  ENUM.  The DNS record type.  ... TODO values need to be listed ...</t>
<t>ext-record-type.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>
</t>
</section> <!-- RelatedDNS -->

<section title="Nameservers Class" anchor="Nameservers">
<t>The Nameservers class describes the name servers associated with a given domain.</t>
<t>
<figure title="The Nameservers Class" anchor="figure_nameservers_class">
<artwork><![CDATA[
+--------------------+
| Nameservers        |
+--------------------+
|                    |<>----------[ Server  ]
|                    |<>--{1..*}--[ Address ]
+--------------------+
]]></artwork></figure></t>

<t>The aggregate classes that constitute Nameservers are:
<list style="hanging">

<t hangText="Server"><vspace/>One.  ML_STRING.  The domain name of the name server.</t>

<t hangText="Address"><vspace/>One or more.  The address of the name server.  See <xref target="Address" />.</t>
</list>
</t>


</section> <!-- Nameservers -->

<section title="DomainContacts Class" anchor="DomainContacts">
<t>The DomainContacts class describes the contact information for a given domain provided either by the registrar or through a whois query.</t>

<t> This contact information can be explicitly described through a Contact class or a reference can be provided to a domain with identical contact information.  Either a single SameDomainContact MUST be present or one or many Contact classes.</t>
<t>
<figure title="The DomainContacts Class" anchor="figure_domaincontacts_class">
<artwork><![CDATA[
+--------------------+
| DomainContacts     |
+--------------------+
|                    |<>--{0..1}--[ SameDomainContact ]
|                    |<>--{1..*}--[ Contact ]
+--------------------+
]]></artwork></figure></t>

<t>The aggregate classes that constitute DomainContacts are:
<list style="hanging">

<t hangText="SameDomainContact"><vspace/>Zero or one.  ML_STRING.  A domain name already cited in this document or through previous exchange that contains the identical contact information as the domain name in question.  The domain contact information associated with this domain should be used in lieu of explicit definition with the Contact class.</t>

<t hangText="Contact"><vspace/>One or more.  Contact information for the domain. See <xref target="Contact" />.</t>
</list>
</t>

</section> <!-- DomainContacts -->

</section> <!-- DomainData class -->

<section title="Service Class" anchor="Service">
<t>The Service class describes a network service of a host or network.  The service is identified by specific port or list of ports, along with the application listening on that port.
</t>
<t>
When Service occurs as an aggregate class of a System that is a source, then this service is the one from which activity of interest is originating.  Conversely, when Service occurs as an aggregate class of a System that is a target, then that service is the one to which activity of interest is directed.
</t>
<t>
This class was derived from <xref target="RFC4765" />.
</t>


<t>
<figure title="The Service Class" anchor="figure_service_class">
<artwork><![CDATA[
+-------------------------+
| Service                 |
+-------------------------+
| INTEGER ip-protocol     |<>--{0..1}--[ Port              ]
| ID observable-id        |<>--{0..1}--[ Portlist          ]
|                         |<>--{0..1}--[ ProtoCode         ]
|                         |<>--{0..1}--[ ProtoType         ]
|                         |<>--{0..1}--[ ProtoField        ]
|                         |<>--{0..*}--[ ApplicationHeader ]
|                         |<>--{0..1}--[ EmailData         ]
|                         |<>--{0..1}--[ Application       ]
+-------------------------+
]]></artwork></figure></t>


<t>The aggregate classes that constitute Service are:
<list style="hanging">
<t hangText="Port"><vspace/>Zero or one.  INTEGER.  A port number.</t>

<t hangText="Portlist"><vspace/>Zero or one.  PORTLIST.  A list of port numbers formatted according to <xref target="dt_port_list" />.
</t>

<t hangText="ProtoCode"><vspace/>Zero or one.  INTEGER.  A transport layer (layer 4) protocol-specific code field (e.g., ICMP code field).
</t>

<t hangText="ProtoType"><vspace/>Zero or one.  INTEGER.  A transport layer (layer 4) protocol specific type field (e.g., ICMP type field). 
</t>

<t hangText="ProtoField"><vspace/>Zero or one.  INTEGER.  A transport layer (layer 4) protocol specific flag field (e.g., TCP flag field).
</t>

<t hangText="ApplicationHeader"><vspace/>Zero or more.  An application layer (layer 7) protocol header.  See <xref target="ApplicationHeader" />.
</t>

<t hangText="EmailData"><vspace/>Zero or one.  Headers associated with an email.  See <xref target="EmailData" />.
</t>

<t hangText="Application"><vspace/>Zero or one.  The application bound to the specified Port or Portlist.  See <xref target="Application" />.
</t>
</list>
</t>

<t>Either a Port or Portlist class MUST be specified for a given instance of a Service class.</t>

<t>When a given System classes with category="source" and another with category="target" are aggregated into a single Flow class, and each of these System classes has a Service and Portlist class, an implicit relationship between these Portlists exists.  If N ports are listed for a System@category="source", and M ports are listed for System@category="target", the number of ports in N must be equal to M.  Likewise, the ports MUST be listed in an identical sequence such that the n-th port in the source corresponds to the n-th port of the target.  If N is greater than 1, a given instance of a Flow class MUST only have a single instance of a System@category="source" and System@category="target".</t>

<t>The Service class has two attributes:</t>
<t>
<list style="hanging">
<t hangText="ip-protocol"><vspace />Required. INTEGER.   The IANA assigned IP protocol number per <xref target="IANA.Protocols" />.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>

<section title="ApplicationHeader Class" anchor="ApplicationHeader">
<t>The ApplicationHeader class allows the representation of arbitrary fields from an application layer protocol header and its corresponding value.</t>

<t>
<figure title="The ApplicationHeader Class" anchor="figure_applicationheader_class">
<artwork><![CDATA[
+--------------------------+
| ApplicationHeader        |
+--------------------------+
| ANY                      |
|                          |
| INTEGER proto            |
| STRING field             |
| ENUM dtype               |
| ID observable-id         |
+--------------------------+
]]></artwork></figure></t>

<t>The ApplicationHeader class has four attributes:</t>
<t>
<list style="hanging">
<t hangText="proto"><vspace />Required. INTEGER.   The IANA assigned port number per <xref target="IANA.Ports" /> corresponding to the application layer protocol whose field will be represented.</t>
<t hangText="field"><vspace />Required. STRING.   The name of the protocol field whose value will be found in the element body.</t>
<t hangText="dtype"><vspace/>Required.  ENUM.  The data type of the element content.  The permitted values for this attribute are shown below. The default value is "string".
<list style="numbers">
<t>boolean.  The element content is of type BOOLEAN.</t>

<t>byte.  The element content is of type BYTE.</t>

<t>bytes.  The element content is of type HEXBIN.</t>

<t>character.  The element content is of type CHARACTER.</t>

<t>date-time.  The element content is of type DATETIME.</t>	

<t>integer.  The element content is of type INTEGER.</t>

<t>portlist.  The element content is of type PORTLIST.</t>

<t>real.  The element content is of type REAL.</t>

<t>string.  The element content is of type STRING.</t>

<t>file.  The element content is a base64 encoded binary file encoded as a BYTE[] type.</t>

<t>path.  The element content is a file-system path encoded as a STRING type. </t>

<t>xml.  The element content is XML.  See <xref target="extending" />.</t>

<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>

<t hangText="ext-dtype"><vspace/>Optional.  STRING.  A means by which to extend the dtype attribute.  See <xref target="extending_enums" />.</t>


<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>
</section> <!-- ApplicationHeader -->

<section title="Application Class" anchor="Application">
<t>The Application class describes an application running on a System providing a Service.
</t>

<t>
<figure title="The Application Class" anchor="figure_application_class">
<artwork><![CDATA[
+--------------------+
| Application        |
+--------------------+
| STRING swid        |<>--{0..1}--[ URL        ]
| STRING configid    |
| STRING vendor      |
| STRING family      |
| STRING name        |
| STRING version     |
| STRING patch       |
+--------------------+
]]></artwork></figure></t>

<t>The aggregate class that constitute Application is:
<list style="hanging">

<t hangText="URL"><vspace/>Zero or one.  URL.  A URL describing the application.</t>
</list>
</t>

<t>The Application class has seven attributes:</t>

<t>
<list style="hanging">
<t hangText="swid"><vspace />Optional.  STRING.  An identifier that can be used to reference this software, where the default value is "0".</t>
<t hangText="configid"><vspace />Optional.  STRING.  An identifier that can be used to reference a particular configuration of this software, where the default value is "0".</t>
<t hangText="vendor"><vspace />Optional.  STRING.  Vendor name of the software.</t>
<t hangText="family"><vspace />Optional.  STRING.  Family of the software.</t>
<t hangText="name"><vspace />Optional.  STRING.  Name of the software.</t>
<t hangText="version"><vspace />Optional.  STRING.  Version of the software.</t>
<t hangText="patch"><vspace />Optional.  STRING.  Patch or service pack level of the software.</t>
</list>
</t>

</section> <!-- Application class -->

</section> <!-- Service class -->

<section title="OperatingSystem Class" anchor="OperatingSystem">
<t>The OperatingSystem class describes the operating system running on a System.  The definition is identical to the <xref target="Application">Application class</xref>.
</t>
</section> <!-- OperatingSystem class -->

<section title="EmailData Class" anchor="EmailData">
<t>The EmailData class describes headers from an email message.  Common headers have dedicated classes, but arbitrary headers can also be described.</t>

<t>
<figure title="EmailData Class" anchor="figure_emaildata_class">
<artwork><![CDATA[
+-------------------------+
| EmailData               |
+-------------------------+
| ID observable-id        |<>--{0..1}--[ EmailFrom        ]
|                         |<>--{0..1}--[ EmailSubject     ]
|                         |<>--{0..1}--[ EmailX-Mailer    ]
|                         |<>--{0..*}--[ EmailHeaderField ]
+-------------------------+
]]></artwork>
</figure></t>

<t>The aggregate class that constitutes EmailData are:
<list style="hanging">

<t hangText="EmailFrom"><vspace/>Zero or one.  The value of the "From:" header field in an email.  See Section 3.6.2 of <xref target="RFC5322" />.</t>
<t hangText="EmailSubject"><vspace/>Zero or one.  The value of the "Subject:" header field in an email.  See Section 3.6.4 of <xref target="RFC5322" />.</t>
<t hangText="EmailX-Mailer"><vspace/>Zero or one.  The value of the "X-Mailer:" header field in an email.</t>
<t hangText="EmailHeaderField"><vspace/>Zero or one.  The value of an arbitrary header field in the email.  See <xref target="ApplicationHeader" />.  The attributes of EmailHeaderField MUST be set as follows: proto="25" and dtype="string".  The name of the email header field MUST be set in the field attribute.</t>
</list>
</t>

<t>The EmailData class has one attribute:</t>
<t>
<list style="hanging">
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>

</section> <!-- EmailData Class" -->

<section title="Record Class" anchor="Record">
<t>The Record class is a container class for log and audit data that provides supportive information about the incident.  The source of this data will often be the output of monitoring tools.  These logs substantiate the activity described in the document.</t>
<t>
<figure title="Record Class" anchor="figure_record_class">
<artwork><![CDATA[
+------------------+
| Record           |
+------------------+
| ENUM restriction |<>--{1..*}--[ RecordData ]
+------------------+
]]></artwork>
</figure></t>

<t>The aggregate class that constitutes Record is:
<list style="hanging">

<t hangText="RecordData"><vspace/>One or more.  Log or audit data generated by a particular type of sensor.  Separate instances of the RecordData class SHOULD be used for each sensor type.
</t>
</list>
</t>

	<t>The Record class has one attribute:

	<list style="hanging">
		<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute 
		has been defined in <xref target="Incident" />.</t>
	</list>
	</t>

<section title="RecordData Class" anchor="RecordData">
<t>The RecordData class groups log or audit data from a given sensor (e.g., IDS, firewall log) and provides a way to annotate the output.
   </t>
   <t>
<figure title="The RecordData Class" anchor="figure_recorddata_class">
<artwork><![CDATA[
+--------------------+
| RecordData         |
+--------------------+
| ENUM restriction   |<>--{0..1}--[ DateTime                   ]
| ID observable-id   |<>--{0..*}--[ Description                 ]
|                    |<>--{0..1}--[ Application                 ]
|                    |<>--{0..*}--[ RecordPattern               ]
|                    |<>--{0..*}--[ RecordItem                  ]                 
|                    |<>--{0..1}--[ HashData                    ]
|                    |<>--{0..*}--[ WindowsRegistryKeysModified ]
|                    |<>--{0..*}--[ AdditionalData             ]     +--------------------+
]]></artwork>
</figure></t>
					
<t>The aggregate classes that constitutes RecordData is:
<list style="hanging">
<t hangText="DateTime"><vspace/>Zero or one.  Timestamp of the RecordItem data.</t>
<t hangText="Description"><vspace/>Zero or more.  ML_STRING.  Free-form textual description of the provided RecordItem data.  At minimum, this description should convey the significance of the provided RecordItem data.</t>
<t hangText="Application"><vspace/>Zero or one.  Information about the sensor used to generate the RecordItem data.</t>
<t hangText="RecordPattern"><vspace/>Zero or more.  A search string to precisely find the relevant data in a RecordItem.</t>
<t hangText="RecordItem"><vspace/>Zero or more.  Log, audit, or forensic data.</t>
<t hangText="HashData"><vspace/>Zero or one.  The file name and hash of a file indicator.</t>
<t hangText="WindowsRegistryKeysModified"><vspace/>Zero or more.  The registry keys that were modified that are indicator(s).</t>
<t hangText="AdditionalData"><vspace/>Zero or more.  An extension mechanism for data not explicitly represented in the data model.</t>

</list>
	</t>

<t>The RecordData class has two attribute:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>
<t hangText="observable-id"><vspace/>Optional.  ID.  See <xref target="observableid_attribute" />.</t>

</list>
</t>
</section> <!-- RecordData -->

<section title="RecordPattern Class" anchor="RecordPattern">
<t>The RecordPattern class describes where in the content of the RecordItem relevant information can be found.  It provides a way to reference subsets of information, identified by a pattern, in a large log file, audit trail, or forensic data.
</t>
<t>
<figure title="The RecordPattern Class" anchor="figure_recordpattern_class">
<artwork><![CDATA[
+-----------------------+
| RecordPattern         |
+-----------------------+
| STRING                |
|                       |
| ENUM type             |
| STRING ext-type       |
| INTEGER offset        |
| ENUM offsetunit       |
| STRING ext-offsetunit |
| INTEGER instance      |
+-----------------------+
]]></artwork>
</figure></t>

<t>The specific pattern to search with in the RecordItem is defined in the body of the element.  It is further annotated by six attributes:</t>

<t>
<list style="hanging">
<t hangText="type"><vspace />Required.  ENUM.  Describes the type of pattern being specified in the element content.  The default is "regex".

<list style="numbers">
<t>regex.  regular expression as defined by POSIX Extended Regular Expressions (ERE) in Chaper 9 of <xref target="IEEE.POSIX"/>.</t>
<t>binary. Binhex encoded binary pattern, per the HEXBIN data type.</t>
<t>xpath.  XML Path (XPath) <xref target="W3C.XPATH" /></t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>		
</t>

<t hangText="ext-type"><vspace />Optional.  STRING.  A means by which to extend the type attribute.  See <xref target="extending_enums" />.</t>

<t hangText="offset"><vspace />Optional.  INTEGER.  Amount of units (determined by the offsetunit attribute) to seek into the RecordItem data before matching the pattern.</t>
<t hangText="offsetunit"><vspace />Optional.  ENUM.  Describes the units of the offset attribute.  The default is "line".
<list style="numbers">
<t>line.  Offset is a count of lines.</t>
<t>byte. Offset is a count of bytes.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list>	
</t>

<t hangText="ext-offsetunit"><vspace />Optional.  STRING.  A means by which to extend the offsetunit attribute.  See <xref target="extending_enums" />.</t>

<t hangText="instance"><vspace />Optional.  INTEGER.  Number of types to apply the specified pattern.</t>
</list>
</t>
</section> <!-- RecordPattern -->

<section title="RecordItem Class" anchor="RecordItem">
<t>The RecordItem class provides a way to incorporate relevant logs, audit trails, or forensic data to support the conclusions made during the course of analyzing the incident.  The class supports both the direct encapsulation of the data, as well as, provides primitives to reference data stored elsewhere.
</t>
<t>This class is identical to <xref target="AdditionalData">AdditionalData class</xref>.
</t>
</section> <!-- RecordItem -->

</section> <!-- Record -->

<section title="WindowsRegistryKeysModified Class" anchor="WindowsRegistryKeysModified">
<t>The WindowsRegistryKeysModified class describes Windows operating system registry keys and the operations that were performed on them.  This class was derived from <xref target="RFC5901" />.
</t>
<t>
<figure title="The WindowsRegistryKeysModified Class" anchor="figure_windowsregistrykeysmodified_class">
<artwork><![CDATA[
+-----------------------------+
| WindowsRegistryKeysModified |
+-----------------------------+
| ID observable-id            |<>--{1..*}--[ Key ]
+-----------------------------+
]]></artwork>
</figure></t>
<t>The aggregate class that constitutes the WindowsRegistryKeysModified class is:
<list style="hanging">
<t hangText="Key"><vspace/>One or many.  The Window registry key.</t>
</list>
</t>
<t>The WindowsRegistryKeysModified class has one attribute:</t>
<t>
<list style="hanging">
<t hangText="observable-id"><vspace />Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>

<section title="Key Class" anchor="Key">
<t>The Key class describes a particular Windows operating system registry key name and value pair, and the operation performed on it.
</t>
<t>
<figure title="The Key Class" anchor="figure_key_class">
<artwork><![CDATA[
+---------------------------+
| Key                       |
+---------------------------+
| ENUM registryaction       |<>----------[ KeyName ]
| STRING ext-registryaction |<>--{0..1}--[ KeyValue ]
| ID observable-id          |
+---------------------------+
]]></artwork>
</figure></t>
<t>The aggregate classes that constitutes Key are:
<list style="hanging">
<t hangText="KeyName"><vspace/>One.  STRING.  The name of the Windows operating system registry key (e.g.,[HKEY_LOCAL_MACHINE\Software\Test\KeyName])</t>
<t hangText="KeyValue"><vspace/>Zero or one.  STRING.  The value of the associated registry key encoded as in Microsoft .reg files <xref target="KB310516" />.</t>
</list></t>

<t>The Key class has three attributes:</t>
<t>
<list style="hanging">
<t hangText="registryaction"><vspace />Optional.  ENUM.  The type of action taken on the registry key.
<list style="numbers">
<t>add-key.  Registry key added.</t>
<t>add-value.  Value added to registry key.</t>
<t>delete-key.  Registry key deleted.</t>
<t>delete-value.  Value deleted from registry key.</t>
<t>modify-key.  Registry key modified.</t>
<t>modify-value.  Value modified for registry key.</t>
<t>ext-value.  External value.</t>
</list></t>
<t hangText="ext-registryaction"><vspace />Optional.  A means by which to extend the registryaction attribute.  See <xref target="extending_enums" />.</t>

<t hangText="observable-id"><vspace />Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list>
</t>
</section> <!-- Key -->

</section> <!-- RegistryKeyModified -->

<section title="HashData Class" anchor="HashData">
<t>The HashData class describes files names and associated hashes and signatures.  ... TODO Fix Issue #20 and #25 ...</t>
<t>
<figure title="The HashData Class" anchor="figure_hashdata_class">
<artwork><![CDATA[
+--------------------------+
| HashData                 |
+--------------------------+
| ENUM type                |<>--{0..*}--[ FileName       ]
| STRING ext-type          |<>--{0..*}--[ FileSize       ]
| BOOL valid               |<>--{0..*}--[ ds:Signature   ]
| ID observable-id         |<>--{0..*}--[ ds:KeyInfo     ]
|                          |<>--{0..*}--[ ds:Reference   ]
|                          |<>--{0..*}--[ AdditionalData ]
+--------------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitutes HashData are:

<list style="hanging">
<t hangText="FileName"><vspace />Zero or more.  ML_STRING.  The name of the file.</t>
<t hangText="FileSize"><vspace />Zero or more.  INTEGER.  The size of the file in bytes.</t>
<t hangText="ds:Signature"><vspace />Zero or more. </t>
<t hangText="ds:KeyInfo"><vspace />Zero or more.</t>
<t hangText="ds:Reference"><vspace />Zero or more.  The algorithm identification and value of a hash computed over a file.  This element is defined in <xref target="RFC3275" />.  Refer to RFC 5901.</t>
<t hangText="AdditionalData"><vspace/>Zero or more.  Mechanism by which to extend the data model.  See <xref target="AdditionalData" /></t>
</list></t>

<t>The HashData class has four attributes:</t>
<t>
<list style="hanging">
<t hangText="type"><vspace />Optional.  ENUM.  The Hash Type.
<list style="numbers">
<t>PKI-email-ds.  PKI email digital signature.</t>
<t>PKI-file-ds.  PKI file digital signature.</t>
<t>PGP-email-ds.  PGP email digital signature.</t>
<t>PGP-file-ds.  PGP file digital signature.</t>
<t>file-hash.  A file hash.</t>
<t>email-hash.  An email hash.</t>
<t>ext-value.  An escape value used to extend this attribute.  See <xref target="extending_enums" />.</t>
</list></t>
<t hangText="ext-type"><vspace />Optional.  STRING.  A means by which to extend the type attribute.  See <xref target="extending_enums" />.</t>
<t hangText="valid"><vspace />Optional.  BOOLEAN.  Indicates if the signature or hash is valid.</t>
<t hangText="observable-id"><vspace />Optional.  ID.  See <xref target="observableid_attribute" />.</t>
</list></t>
</section> <!-- HashData -->

<section title="IndicatorData Class" anchor="IndicatorData">
<t>The IndicatorData class describes the indicators identified from analysis of an incident.</t>
<t>
<figure title="The IndicatorData Class" anchor="figure_indicatordata_class">
<artwork><![CDATA[
+--------------------------+
| IndicatorData            |
+--------------------------+
|                          |<>--{1..*}--[ Indicator      ]
+--------------------------+
]]></artwork>
</figure></t>

<t>The aggregate class that constitutes IndicatorData is:

<list style="hanging">
<t hangText="Indicator"><vspace />One or more.  An indicator from the incident.</t>
</list></t>

<t>The IndicatorData class has no attributes.</t>
</section> <!-- IndicatorData -->

<section title="Indicator Class" anchor="Indicator">
<t>The Indicator class describes a cyber indicator.  An indicator consists of observable features and phenomenon that aid in the forensic or proactive detection of malicious activity, and associated meta-data.  This indicator can be described outright or reference observable features and phenomenon described elsewhere in the incident information.  Portions of an incident description can be composed to define an indicator, as can the indicators themselves.</t>
<t>
<figure title="The Indicator Class" anchor="figure_indicator_class">
<artwork><![CDATA[
+--------------------+
| Indicator          |
+--------------------+
| ENUM restriction   |<>----------[ IndicatorID            ]
|                    |<>--{0..1}--[ AlternativeIndicatorID ]
|                    |<>--{0..*}--[ Description            ]
|                    |<>--{0..1}--[ StartTime              ]
|                    |<>--{0..1}--[ EndTime                ]
|                    |<>--{0..1}--[ Confidence             ]
|                    |<>--{0..*}--[ Contact                ]
|                    |<>--{0..1}--[ Observable             ]
|                    |<>--{0..1}--[ ObservableReference    ]
|                    |<>--{0..1}--[ IndicatorExpression    ]
|                    |<>--{0..1}--[ IndicatorReference     ]
|                    |<>--{0..*}--[ AdditionalData         ]
+--------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute Indicator are:

<list style="hanging">
<t hangText="IndicatorID"><vspace />One.  An identifier for this indicator.  See <xref target="IndicatorID" /></t>
<t hangText="AlternativeIndicatorID"><vspace />Zero or one. An alternative identifier for this indicator.  See <xref target="AlternativeIndicatorID" /></t>
<t hangText="Description"><vspace />Zero or more. ML_STRING.  A free-form textual description of the indicator.</t>
<t hangText="StartTime"><vspace />Zero or one. DATETIME.  A timestamp of the start of the time period during which this indicator is valid.</t>
<t hangText="EndTime"><vspace />Zero or one. DATETIME. A timestamp fo the end of the time period during which this indicaor is valid.</t>
<t hangText="Confidence"><vspace />Zero or one.  An estimate of the confidence in the quality of the indicator.  See <xref target="Confidence" />.</t>
<t hangText="Contact"><vspace />Zero or more.  Contact information for this indicator. See <xref target="Contact" />.</t>
<t hangText="Observable"><vspace />Zero or one.  An observable feature or phenomenon of this indicator.  See <xref target="Observable" />.</t>
<t hangText="ObservableReference"><vspace />Zero or one.  A reference to a feature or phenomenon defined elsewhere in the document.  See <xref target="ObservableReference" />.</t>
<t hangText="IndicatorExpression"><vspace />Zero or one.  A composition of observables.  See <xref target="IndicatorExpression" />.</t>
<t hangText="IndicatorReference"><vspace />Zero or one.  A reference to an indicator.</t>
<t hangText="AdditionalData"><vspace/>Zero or more.  Mechanism by which to extend the data model.  See <xref target="AdditionalData" /></t>
</list></t>

<t>The Indicator class MUST have exactly one instance of an Observable, IndicatorExpression, ObservableReference, or IndicatorReference class.</t>

<t>The StartTime and EndTime classes can be used to define an interval during which the indicator is valid.  If both classes are present, the indicator is consider valid only during the decribed interval.  If neither class is provided, the indicator is considered valid during any time interval.  If only a StartTime is provided, the indicator is valid anytime after this timestamp.  If only an EndTime is provided, the indicator is valid anytime prior to this timestamp.</t>

<t>The Indicator class has one attribute:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  See <xref target="restriction" />.</t>
</list>
</t>

<section title="IndicatorID Class" anchor="IndicatorID">
<t>The IndicatorID class identifies an indicator with a indentifier globally unique identifier.  The combination of the name and version attributes, and the element content form this identifier.  Indicators generated by given CSIRT MUST NOT resuse the same value unless they are referencing the same indicator.</t>

<t>
<figure title="The IndicatorID Class" anchor="figure_indicatorid_class">
<artwork><![CDATA[
+------------------+
| IndicatorID      |
+------------------+
| ID               |
|                  |
| STRING name      |
| STRING version   |
+------------------+
]]></artwork>
</figure></t>

<t>The IndicatorID class has two attributes:
<list style="hanging">
<t hangText="name"><vspace/>Required.  STRING.  An identifier describing the CSIRT that created the indicator.  In order to have a globally unique CSIRT name, the fully qualified domain name associated with the CSIRT MUST be used.  This format is identical to the IncidentID@name attribute in <xref target="IncidentID" />.</t>

<t hangText="version"><vspace/>Required.  STRING.  A version number of an indicator.</t>
</list>
</t>
</section>  <!-- IndicatorID class -->

<section title="AlternativeIndicatorID Class" anchor="AlternativeIndicatorID">
<t>The AlternativeIndicatorID class lists alternative identifiers for an indicator.</t>

<t>
<figure title="The AlternativeIndicatorID Class" anchor="figure_AlternativeIndicatorID_class">
<artwork><![CDATA[
+-------------------------+
| AlternativeIndicatorID  |
+-------------------------+
| ENUM restriction        |<>--{1..*}--[ IndicatorReference ]
|                         |
+-------------------------+
]]></artwork></figure></t>
	
<t>The aggregate class that constitutes AlternativeIndicatorID is:
<list style="hanging">
<t hangText="IndicatorReference"><vspace/>One or more.  A reference to an indicator.</t> 
</list></t>
	
<t>The AlternativeIndicatorID class has one attribute:
<list style="hanging">
<t hangText="restriction"><vspace/>Optional.  ENUM.  This attribute has been defined in <xref target="Incident" />.</t>
</list></t>
</section> <!-- AlternativeIndicatorID class -->

<section title="Observable Class" anchor="Observable">
<t>The Observable class describes a feature and phenomenon that can be observed or measured for the purposes of detecting malicious behavior.</t>
<t>
<figure title="The Observable Class" anchor="figure_observable_class">
<artwork><![CDATA[
+-------------------+
| Observable        |
+-------------------+
|                   |<>--{0..1}--[ Address                     ]
|                   |<>--{0..1}--[ DomainData                  ]
|                   |<>--{0..1}--[ Service                     ]
|                   |<>--{0..1}--[ EmailData                   ]
|                   |<>--{0..1}--[ ApplicationHeader           ]
|                   |<>--{0..1}--[ WindowsRegistryKeysModified ]
|                   |<>--{0..1}--[ HashData                    ]
|                   |<>--{0..1}--[ RecordData                  ]
|                   |<>--{0..1}--[ EventData                   ]
|                   |<>--{0..1}--[ Incident                    ]
|                   |<>--{0..*}--[ Expectation                 ]
|                   |<>--{0..*}--[ Reference                   ]
|                   |<>--{0..1}--[ Assessment                  ]
|                   |<>--{0..1}--[ HistoryItem                 ]
|                   |<>--{0..*}--[ AdditionalData              ]
+-------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute Observable are:

<list style="hanging">
<t hangText="Address"><vspace />Zero or One.  An Address observable.  See <xref target="Address" />.</t>
<t hangText="DomainData"><vspace />Zero or One.  A DomainData observable.  See <xref target="DomainData" />.</t>
<t hangText="Service"><vspace />Zero or One.  A Service observable.  See <xref target="Service" />.</t>
<t hangText="EmailData"><vspace />Zero or One.  A EmailData observable.  See <xref target="EmailData" />.</t>
<t hangText="ApplicationHeader"><vspace />Zero or One.  An ApplicationHeader observable.  See <xref target="ApplicationHeader" />.</t>
<t hangText="WindowsRegistryKeysModified"><vspace />Zero or One.  A WindowsRegistryKeysModified observable.  See <xref target="WindowsRegistryKeysModified" />.</t>
<t hangText="HashData"><vspace />Zero or One.  A HashData observable.  See <xref target="HashData" />.</t>
<t hangText="RecordData"><vspace />Zero or One.  A RecordData observable.  See <xref target="RecordData" />.</t>
<t hangText="EventData"><vspace />Zero or One.  An EventData observable.  See <xref target="EventData" />.</t>
<t hangText="Incident"><vspace />Zero or One.  An Incident observable.  See <xref target="Incident" />.</t>
<t hangText="EventData"><vspace />Zero or One.  An EventData observable.  See <xref target="EventData" />.</t>
<t hangText="Expectation"><vspace />Zero or One.  An Expectation observable.  See <xref target="Expectation" />.</t>
<t hangText="Reference"><vspace />Zero or One.  A Reference observable.  See <xref target="Reference" />.</t>
<t hangText="Assessment"><vspace />Zero or One.  An Assessment observable.  See <xref target="Assessment" />.</t>
<t hangText="HistoryItem"><vspace />Zero or One.  A HistoryItem observable.  See <xref target="HistoryItem" />.</t>
<t hangText="AdditionalData"><vspace />Zero or more.  Mechanism by which to extend the data model.  See <xref target="AdditionalData" />.</t>
</list>
</t>

<t>The Observable class MUST have exactly one of the possible child classes.</t>

<t>The Observable class has no attributes.</t>
</section> <!-- Observable -->

<section title="IndicatorExpression Class" anchor="IndicatorExpression">
<t>The IndicatorExpression describes an expression composed of observed phenomenon or features, or indicators.  Elements of the expression can be described directly, reference relevant data from other parts of a given IODEF document, or reference previously defined indicators.</t>

<t>All child classes of a given instance of IndicatorExpression form a boolean algebraic expression where the operator between them is determined by the operator attribute.  Nesting an IndicatorExpression in itself is akin to a parenthesis in the expression.</t>

<t>
<figure title="The IndicatorExpression Class" anchor="figure_indicatorexpression_class">
<artwork><![CDATA[
+--------------------------+
| IndicatorExpression      |
+--------------------------+
| ENUM operator            |<>--{0..*}--[ IndicatorExpression  ]
|                          |<>--{0..*}--[ Observable           ]
|                          |<>--{0..*}--[ ObservableReference  ]
|                          |<>--{0..*}--[ IndicatorReference   ]
|                          |<>--{0..*}--[ AdditionalData       ]
+--------------------------+
]]></artwork>
</figure></t>

<t>The aggregate classes that constitute IndicatorExpression are:

<list style="hanging">
<t hangText="IndicatorExpression"><vspace />Zero or more.  An expression composed of other observables or indicators.</t>
<t hangText="Observable"><vspace />Zero or more. A description of an observable.</t>
<t hangText="ObservableReference"><vspace />Zero or more. A reference to another observable.</t>
<t hangText="IndicatorReference"><vspace />Zero or more. A reference to another indicator.</t>
<t hangText="AdditionalData"><vspace/>Zero or more.  Mechanism by which to extend the data model.  See <xref target="AdditionalData" /></t>
</list></t>

<t>... TODO Additional text is required to describe the valid combinations of classes and how the operator class should be applied ...</t>

<t>The IndicatorExpression class has one attributes:</t>
<t>
<list style="hanging">
<t hangText="operator"><vspace />Optional.  ENUM.  The operator to be applied between the child elements.
<list style="numbers">
<t>not.  negation operator.</t>
<t>and.  conjunction operator.</t>
<t>or.  disjunction operator.</t>
<t>xor.  exclusive disjunction operator.</t>
</list></t>
</list></t>
</section> <!-- IndicatorExpression -->

<section title="ObservableReference Class" anchor="ObservableReference">
<t>The ObservableReference describes a reference to an observable feature or phenomenon described elsewhere in the document.</t>

<t>This class has no content.</t>

<figure title="The ObservableReference Class" anchor="figure_observablereferece_class">
<artwork><![CDATA[
+-------------------------+
| ObservableReference     |
+-------------------------+
| EMPTY                   |
|                         |
| IDREF uid-ref           |
+-------------------------+
]]></artwork>
</figure>

<t>The ObservableReference class has one attributes:
<list style="hanging">
<t hangText="uid-ref"><vspace/>Required.  IDREF.  An identifier that serves as a reference to a class in the IODEF document. The referenced class will have this identifier set in the observable-id attribute.</t>
</list>
</t>
</section>  <!-- ObservableReference class -->

<section title="IndicatorReference Class" anchor="IndicatorReference">
<t>The IndicatorReference describes a reference to an indicator.  This reference may be to an indicator described in the IODEF document or in a previously exchanged IODEF document.</t>

<figure title="The IndicatorReference Class" anchor="figure_indicatorreferece_class">
<artwork><![CDATA[
+--------------------------+
| IndicatorReference       |
+--------------------------+
| EMPTY                    |
|                          |
| IDREF uid-ref            |
| STRING euid-ref          |
| STRING version           |
+--------------------------+
]]></artwork>
</figure>

<t>The IndicatorReference class has one attributes:
<list style="hanging">
<t hangText="uid-ref"><vspace/>Optional.  IDREF.  An identifier that serves as a reference to an Indicator class in the IODEF document. The referenced Indicator class will have this identifier set in the IndicatorID class.</t>
<t hangText="euid-ref"><vspace/>Optional.  STRING.  An identifier that references an IndicatorID not in this IODEF document.</t>
<t hangText="version"><vspace/>Optional.  STRING.  A version number of an indicator.</t>
</list>
</t>
<t>Either the uid-ref or the euid-ref attribute MUST be set.</t>
</section>  <!-- IndicatorReference class -->
</section> <!-- Indicator -->


</section> <!-- IODEF Data Model -->

<section title="Processing Considerations" anchor="processing">
<t>
This section defines additional requirements on creating and parsing IODEF documents.
</t>

<section title="Encoding" anchor="encoding">
<t>
Every IODEF document MUST begin with an XML declaration, and MUST specify the XML version used.  If UTF-8 encoding is not used, the character encoding MUST also be explicitly specified.  The IODEF conforms to all XML data encoding conventions and constraints.
</t>

<t>The XML declaration with no character encoding will read as follows:
	<vspace blankLines='1'/>
	&lt;?xml version="1.0" ?&gt;
	<vspace blankLines='1' />

When a character encoding is specified, the XML declaration will read like the following:

	<vspace blankLines='1' />
	&lt;?xml version="1.0" encoding="charset" ?&gt;
	<vspace blankLines='1' />

Where "charset" is the name of the character encoding as registered with the Internet Assigned Numbers Authority (IANA), see <xref target="RFC2978" />.
</t>


<t>
The following characters have special meaning in XML and MUST be escaped with their entity reference equivalent: <![CDATA["&", "<", ">", "\"" (double quotation mark), and "'"]]> (apostrophe).  These entity references are <![CDATA["&amp;", "&lt;", "&gt;", "&quot;", and "&apos;"]]> respectively.
</t>

</section>  <!-- Encoding -->

<section title="IODEF Namespace" anchor="ns">
<t>
The IODEF schema declares a namespace of "urn:ietf:params:xml:ns:iodef-2.0" and registers it per <xref target="W3C.XMLNS" />.  Each IODEF
document MUST include a valid reference to the IODEF schema using the
"xsi:schemaLocation" attribute.  An example of such a declaration would
look as follows:<figure>
<artwork><![CDATA[
<IODEF-Document 
   version="2.00" lang="en-US"
   xmlns:iodef="urn:ietf:params:xml:ns:iodef-2.0"
   xsi:schemaLocation="urn:ietf:params:xmls:schema:iodef-2.0"
]]></artwork>
</figure>
</t>
</section> <!-- IODEF Namespace -->

<section title="Validation" anchor="validation">
<t>
The IODEF documents MUST be well-formed XML.  It is RECOMMENDED that recipients validate the document against the schema described in <xref target="schema" />.  However, mere conformance to the schema is not sufficient for a semantically valid IODEF document.  There is additional specification in the text of Section 3 that cannot be readily encoded in the schema and it must also be considered by an IODEF parser.  The following is a list of discrepancies in what is more strictly specified in the normative text (Section 3), but not enforced in the IODEF schema:

<list style="symbols">
<t>The elements or attributes that are defined as POSTAL, NAME, PHONE, and EMAIL data-types are implemented as "xs:string", but more rigid formatting requirements are specified in the text.</t>

<t>The IODEF-Document@lang and MLStringType@lang attributes are declared as an "xs:language" that constrains values with a regular expression.  However, the value of this attribute still needs to be validated against the list of possible enumerated values is defined in <xref target="RFC4646" />.</t>

<t>The MonetaryImpact@currency attribute is declared as an "xs:string", but the list of valid values as defined in <xref target="ISO4217" />.</t>

<t>All of the aggregated classes Contact and EventData are optional in the schema, but at least one of these aggregated classes MUST be present.</t>

<t>There are multiple conventions that can be used to categorize a system using the NodeRole class or to specify software with the Application and OperatingSystem classes.  IODEF parsers MUST accept incident reports that do not use these fields in accordance with local conventions.</t>

<t>The Confidence@rating attribute determines whether the element content of Confidence should be empty.</t>

<t>The Address@type attribute determines the format of the element content.</t>

<t>The attributes AdditionalData@dtype and RecordItem@dtype derived from iodef:ExtensionType determine the semantics and formatting of the element content.</t>

<t>Symmetry in the enumerated ports of a Portlist class is required between sources and targets.  See <xref target="Service" />.</t>
</list>
</t>
</section> <!-- Validation -->

<section title="Incompatibilities with v1" anchor="differencesfromv1">
<t>
Version 2 of the IODEF data model makes a number of changes to <xref target="RFC5070" />.  Largely, these changes were additive in nature -- classes and enumerated values were added.  The following is a list of incompatibilities where the data model has changed between versions:

<list style="symbols">
<t>Renames the Service@ip_protocol attribute to @ip-protocol.</t>
<t>Removes the Node/NodeName in favor of representing domain names with Node/DomainData/Name.  Node/DataTime was also removed so that Node/DomainData/DateDomainWasChecked can represent the time at which the name to address resolution occured.</t>
</list>

</t>
</section> <!-- Differences from v1 -->

</section> <!-- Processing Considerations -->

<section title="Extending the IODEF" anchor="extending">

<t>In order to support the changing activity of CSIRTS, the IODEF data model will need to evolve along with them.  This section discusses how new data elements that have no current representation in the data model can be incorporated into the IODEF.  These techniques are designed so that adding new data will not require a change to the IODEF schema.  With proven value, well documented extensions can be incorporated into future versions of the specification.  However, this approach also supports private extensions relevant only to a closed consortium.</t>

<section title="Extending the Enumerated Values of Attributes" anchor="extending_enums">
<t>
The data model supports a means by which to add new enumerated values
to an attribute.  For each attribute that supports this extension
technique, there is a corresponding attribute in the same element
whose name is identical, less a prefix of "ext-".  This special
attribute is referred to as the extension attribute, and the attribute
being extended is referred to as an extensible attribute.  For
example, an extensible attribute named "foo" will have a corresponding
extension attribute named "ext-foo".  An element may have many
extensible, and therefore many extension, attributes. 
</t>

<t>
In addition to a corresponding extension attribute, each extensible attribute has "ext-value" as one its possible values.  This particular value serves as an escape sequence and has no valid meaning.
</t>

<t>
In order to add a new enumerated value to an extensible attribute, the value of this attribute MUST be set to "ext-value", and the new desired value MUST be set in the corresponding extension attribute.  For example, an extended instance of the type attribute of the Impact class would look as follows: 

<figure><artwork><![CDATA[
 <Impact type="ext-value" ext-type="new-attack-type">
]]></artwork></figure>
</t>
<t>
A given extension attribute MUST NOT be set unless the corresponding extensible attribute has been set to "ext-value".
</t>

</section> <!-- Extending enumerated values -->

<section title="Extending Classes" anchor="extending_classes">
<t>
The classes of the data model can be extended only through the use of the AdditionalData and RecordItem classes.  These container classes, collectively referred to as the extensible classes, are implemented with the iodef:ExtensionType data type in the schema.  They provide the ability to have new atomic or XML-encoded data elements in all of the top-level classes of the Incident class and a few of the more complicated subordinate classes.  As there are multiple instances of the extensible classes in the data model, there is discretion on where to add a new data element.  It is RECOMMENDED that the extension be placed in the most closely related class to the new information.
</t>
<t>
Extensions using the atomic data types (i.e., all values of the dtype attributes other than "xml") MUST:
<list style="numbers">
<t>Set the element content of extensible class to the desired value, and</t>
<t>Set the dtype attribute to correspond to the data type of the element content.
</t>
</list> 
</t>

<t>
The following guidelines exist for extensions using XML:
<list style="numbers">

<t>The element content of the extensible class MUST be set to the desired value and the dtype attribute MUST be set to "xml".</t>

<t>The extension schema MUST declare a separate namespace.  It is RECOMMENDED that these extensions have the prefix "iodef-".  This recommendation makes readability of the document easier by allowing the reader to infer which namespaces relate to IODEF by inspection.</t>

<t>It is RECOMMENDED that extension schemas follow the naming convention of the IODEF data model.  This makes reading an extended IODEF document look like any other IODEF document.  The names of all elements are capitalized.  For elements with composed names, a capital letter is used for each word.  Attribute names are lower case.  Attributes with composed names are separated by a hyphen.</t>  

<t>Parsers that encounter an unrecognized element in a namespace that they do support MUST reject the document as a syntax error.</t>

<t>There are security and performance implications in requiring implementations to dynamically download schemas at run time.  Thus, implementations SHOULD NOT download schemas at runtime, unless implementations take appropriate precautions and are prepared for potentially significant network, processing, and time-out demands.</t>

<t>Some users of the IODEF may have private schema definitions that might not be available on the Internet.  In this situation, if a IODEF document leaks out of the private use space, references to some of those document schemas may not be resolvable.  This has two implications.  First, references to private schemas may never resolve.  As such, in addition to the suggestion that implementations do not download schemas at runtime mentioned above, recipients MUST be prepared for a schema definition in an IODEF document never to resolve.</t>

</list>
</t>
 
<t>
The following schema and XML document excerpt provide a template for an extension schema and its use in the IODEF document.  
</t>
<t>
This example schema defines a namespace of "iodef-extension1" and a single element named "newdata".

<figure><artwork><![CDATA[
  <xs:schema
     targetNamespace="iodef-extension1.xsd"
     xmlns:iodef-extension1="iodef-extension1.xsd"
     xmlns:xs="http://www.w3.org/2001/XMLSchema">
     attributeFormDefault="unqualified"
     elementFormDefault="qualified">
   <xs:import
        namespace="urn:ietf:params:xml:ns:iodef-1.0"
        schemaLocation=" urn:ietf:params:xml:schema:iodef-1.0"/>

     <xs:element name="newdata" type="xs:string" />
  </xs:schema>
]]></artwork></figure>
</t>
<t>

The following XML excerpt demonstrates the use of the above schema as an extension to the IODEF.

<figure><artwork><![CDATA[
     <IODEF-Document 
          version="2.00" lang="en-US" 
          xmlns="urn:ietf:params:xml:ns:iodef-1.0" 
          xmlns:iodef=" urn:ietf:params:xml:ns:iodef-1.0" 
          xmlns:iodef-extension1="iodef-extension1.xsd" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xsi:schemaLocation="iodef-extension1.xsd">         
         <Incident purpose="reporting">
         ...
         <AdditionalData dtype="xml" meaning="xml">
           <iodef-extension1:newdata>
              Field that could not be represented elsewhere
           </iodef-extension1:newdata>
         </AdditionalData>
   </IODEF-Document 
]]></artwork></figure>
</t>
</section> <!-- Extending classes -->

</section> <!-- Extending the IODEF -->


<section title="Internationalization Issues" 
         anchor="internationalization">

<t>Internationalization and localization is of specific concern to the IODEF, since it is only through collaboration, often across language barriers, that certain incidents be resolved.  The IODEF supports this goal by depending on XML constructs, and through explicit design choices in the data model.
</t>

<t>
Since IODEF is implemented as an XML Schema, it implicitly supports all the different character encodings, such as UTF-8 and UTF-16, possible with XML.  Additionally, each IODEF document MUST specify the language in which their contents are encoded.  The language can be specified with the attribute "xml:lang" (per Section 2.12 of <xref target="W3C.XML" />) in the top-level element (i.e., IODEF-Document@lang) and letting all other elements inherit that definition.  All IODEF classes with a free-form text definition (i.e., all those defined of type iodef:MLStringType) can also specify a language different from the rest of the document.  The valid language codes for the "xml:lang" attribute are described in <xref target="RFC4646" />.  
</t>

<t>
The data model supports multiple translations of free-form text.  In the places where free-text is used for descriptive purposes, the given class always has a one-to-many cardinality to its parent (e.g., Description class).  The intent is to allow the identical text to be encoded in different instances of the same class, but each being in a different language.  This approach allows an IODEF document author to send recipients speaking different languages an identical document.  The IODEF parser SHOULD extract the appropriate language relevant to the recipient.
</t>

<t>
While the intent of the data model is to provide internationalization and localization, the intent is not to do so at the detriment of interoperability.  While the IODEF does support different languages, the data model also relies heavily on standardized enumerated attributes that can crudely approximate the contents of the document.  With this approach, a CSIRT should be able to make some sense of an IODEF document it receives even if the text based data elements are written in a language unfamiliar to the analyst.
</t>

</section>

<section title="Examples" anchor="examples">

<t>
This section provides examples of an incident encoded in the IODEF.  These examples do not necessarily represent the only way to encode a particular incident.
</t>

<section title="Worm">
<t>An example of a CSIRT reporting an instance of the Code Red worm.</t>
<t>
<figure>
<artwork>
<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- This example demonstrates a report for a very 
     old worm (Code Red) -->
<IODEF-Document version="2.00" lang="en"
  xmlns="urn:ietf:params:xml:ns:iodef-1.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:ietf:params:xml:schema:iodef-1.0"> 
  <Incident purpose="reporting">
    <IncidentID name="csirt.example.com">189493</IncidentID>
    <ReportTime>2001-09-13T23:19:24+00:00</ReportTime>
    <Description>Host sending out Code Red probes</Description>
    <!-- An administrative privilege was attempted, but failed -->
    <Assessment>
      <Impact completion="failed" type="admin"/>
    </Assessment>
    <Contact role="creator" type="organization">
      <ContactName>Example.com CSIRT</ContactName>
      <RegistryHandle registry="arin">example-com</RegistryHandle>
      <Email>contact@csirt.example.com</Email>
    </Contact>
    <EventData>
      <Flow>
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.200</Address>
            <Counter type="event">57</Counter>
          </Node>
        </System>
        <System category="target">
          <Node>
            <Address category="ipv4-net">192.0.2.16/28</Address>
          </Node>
          <Service ip_protocol="6">
            <Port>80</Port>
          </Service>
        </System>
      </Flow>
      <Expectation action="block-host" />
      <!-- <RecordItem> has an excerpt from a log -->
      <Record>
        <RecordData>
          <DateTime>2001-09-13T18:11:21+02:00</DateTime>
          <Description>Web-server logs</Description>
          <RecordItem dtype="string">
        192.0.2.1 - - [13/Sep/2001:18:11:21 +0200] "GET /default.ida?
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
          </RecordItem>
            <!-- Additional logs -->
          <RecordItem dtype="url">
             http://mylogs.example.com/logs/httpd_access</RecordItem>
        </RecordData>
      </Record>
    </EventData>
    <History>
      <!-- Contact was previously made with the source network 
           owner -->
      <HistoryItem action="contact-source-site">
        <DateTime>2001-09-14T08:19:01+00:00</DateTime>
        <Description>Notification sent to 
                     constituency-contact@192.0.2.200</Description>
      </HistoryItem>
    </History>
  </Incident>
</IODEF-Document>

]]></artwork></figure></t>
</section> <!-- Worm -->

<section title="Reconnaissance" anchor="example.recon">
<t>An example of a CSIRT reporting a scanning activity.
</t>
<t><figure>
<artwork>
<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<!-- This example describes reconnaissance activity: one-to-one 
     and one-to-many scanning -->
<IODEF-Document version="2.00" lang="en" 
  xmlns="urn:ietf:params:xml:ns:iodef-1.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:ietf:params:xml:schema:iodef-1.0"> 
  <Incident purpose="reporting">
    <IncidentID name="csirt.example.com">59334</IncidentID>
    <ReportTime>2006-08-02T05:54:02-05:00</ReportTime>
    <Assessment>
      <Impact type="recon" completion="succeeded" />
    </Assessment>
    <Method>
      <!-- Reference to the scanning tool "nmap" -->
      <Reference>
        <ReferenceName>nmap</ReferenceName>
        <URL>http://nmap.toolsite.example.com</URL>
      </Reference>
    </Method>
    <!-- Organizational contact and that for staff in that 
         organization -->
    <Contact role="creator" type="organization">
      <ContactName>CSIRT for example.com</ContactName>
      <Email>contact@csirt.example.com</Email>
      <Telephone>+1 412 555 12345</Telephone>
      <!-- Since this <Contact> is nested, Joe Smith is part of
           the CSIRT for example.com -->
      <Contact role="tech" type="person" restriction="need-to-know">
        <ContactName>Joe Smith</ContactName>
        <Email>smith@csirt.example.com</Email>
      </Contact>
    </Contact>    
    <EventData>
      <!-- Scanning activity as follows:
        192.0.2.1:60524 >> 192.0.2.3:137
               192.0.2.1:60526 >> 192.0.2.3:138
               192.0.2.1:60527 >> 192.0.2.3:139
               192.0.2.1:60531 >> 192.0.2.3:445 
      -->
      <Flow>
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.200</Address>
          </Node>
          <Service ip_protocol="6">
            <Portlist>60524,60526,60527,60531</Portlist>
          </Service>
        </System>
        <System category="target">
          <Node>
            <Address category="ipv4-addr">192.0.2.201</Address>
          </Node>
          <Service ip_protocol="6">
            <Portlist>137-139,445</Portlist>
          </Service>
        </System>
      </Flow>
      <!-- Scanning activity as follows: 
            192.0.2.2 >> 192.0.2.3/28:445 -->
      <Flow>
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.240</Address>
          </Node>
        </System>
        <System category="target">
          <Node>
            <Address category="ipv4-net">192.0.2.64/28</Address>
          </Node>
          <Service ip_protocol="6">
            <Port>445</Port>
          </Service>
        </System>
      </Flow>      
    </EventData>
  </Incident>
</IODEF-Document>

]]></artwork></figure></t>
</section> <!-- Example: Recon -->

<section title="Bot-Net Reporting" anchor="example.botnet">
<t>An example of a CSIRT reporting a bot-network.
</t>
<t>
<figure>
<artwork>
<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<!-- This example describes a compromise and subsequent installation 
     of bots -->
<IODEF-Document version="2.00" lang="en" 
  xmlns="urn:ietf:params:xml:ns:iodef-1.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:ietf:params:xml:schema:iodef-1.0"> 
  <Incident purpose="mitigation">
    <IncidentID name="csirt.example.com">908711</IncidentID>
    <ReportTime>2006-06-08T05:44:53-05:00</ReportTime>
    <Description>Large bot-net</Description>
    <Assessment>
      <Impact type="dos" severity="high" completion="succeeded" />
    </Assessment>
    <Method>
      <!-- References a given piece of malware, "GT Bot" -->
      <Reference>
        <ReferenceName>GT Bot</ReferenceName>
      </Reference>
      <!-- References the vulnerability used to compromise the 
           machines -->
      <Reference>
        <ReferenceName>CA-2003-22</ReferenceName>
        <URL>http://www.cert.org/advisories/CA-2003-22.html</URL>
        <Description>Root compromise via this IE vulnerability to 
                     install the GT Bot</Description>
      </Reference>
    </Method>
    <!-- A member of the CSIRT that is coordinating this 
         incident -->
    <Contact type="person" role="irt">
      <ContactName>Joe Smith</ContactName>
      <Email>jsmith@csirt.example.com</Email>
    </Contact>
    <EventData>
      <Description>These hosts are compromised and acting as bots 
                   communicating with irc.example.com.</Description>
      <Flow>
        <!-- bot running on 192.0.2.1 and sending DoS traffic at 
             10,000 bytes/second -->
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.1</Address>
          </Node>
          <Counter type="byte" duration="second">10000</Counter>
          <Description>bot</Description>
        </System>
        <!-- a second bot on 192.0.2.3 -->
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.3</Address>
          </Node>
          <Counter type="byte" duration="second">250000</Counter>
          <Description>bot</Description>
        </System>
        <!-- Command-and-control IRC server for these bots-->
        <System category="intermediate">
          <Node>
            <NodeName>irc.example.com</NodeName>
            <Address category="ipv4-addr">192.0.2.20</Address>
            <DateTime>2006-06-08T01:01:03-05:00</DateTime>
          </Node>
          <Description>
             IRC server on #give-me-cmd channel
          </Description>
        </System>        
      </Flow>
      <!-- Request to take these machines offline -->
      <Expectation action="investigate">
        <Description>
          Confirm the source and take machines off-line and 
          remediate
        </Description>
      </Expectation>
    </EventData>
  </Incident>
</IODEF-Document>

]]></artwork></figure></t>
</section> <!-- Example: Botnet -->

<section title="Watch List" anchor="example.watch-list">
<t>An example of a CSIRT conveying a watch-list.
</t>
<t><figure>
<artwork>
<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<!-- This example demonstrates a trivial IP watch-list -->
<!-- @formatid is set to "watch-list-043" to demonstrate how 
     additional semantics about this document could be conveyed 
     assuming both parties understood it-->
<IODEF-Document version="2.00" lang="en" formatid="watch-list-043"
  xmlns="urn:ietf:params:xml:ns:iodef-1.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:ietf:params:xml:schema:iodef-1.0"> 
  <Incident purpose="reporting" restriction="private">
    <IncidentID name="csirt.example.com">908711</IncidentID>
    <ReportTime>2006-08-01T00:00:00-05:00</ReportTime>
    <Description>
      Watch-list of known bad IPs or networks
    </Description>
    <Assessment>
      <Impact type="admin" completion="succeeded" />
      <Impact type="recon" completion="succeeded" />
    </Assessment>
    <Contact type="organization" role="creator">
      <ContactName>CSIRT for example.com</ContactName>
      <Email>contact@csirt.example.com</Email>
    </Contact>
    <!-- Separate <EventData> is used to convey 
         different <Expectation> -->
    <EventData>
      <Flow>
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.53</Address>
          </Node>
          <Description>Source of numerous attacks</Description>
        </System>
      </Flow>
      <!-- Expectation class indicating that sender of list would 
           like to be notified if activity from the host is seen -->
      <Expectation action="contact-sender" />
    </EventData>
    <EventData>
      <Flow>
        <System category="source">
          <Node>
            <Address category="ipv4-net">192.0.2.16/28</Address>
          </Node>
          <Description>
            Source of heavy scanning over past 1-month
          </Description>
        </System>
      </Flow>
      <Flow>
        <System category="source">
          <Node>
            <Address category="ipv4-addr">192.0.2.241</Address>
          </Node>
          <Description>C2 IRC server</Description>
        </System>
      </Flow>
      <!-- Expectation class recommends that these networks 
           be filtered -->
      <Expectation action="block-host" />
    </EventData>
  </Incident>
</IODEF-Document>

]]></artwork></figure></t>
</section> <!-- Example: Watch List -->

</section>  <!-- Examples -->
		
<section title="The IODEF Schema" anchor="schema">
<t>
<figure><artwork><![CDATA[
<xs:schema targetNamespace="urn:ietf:params:xml:ns:iodef-2.0"
           xmlns="urn:ietf:params:xml:ns:iodef-2.0"
           xmlns:iodef="urn:ietf:params:xml:ns:iodef-2.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">
<xs:import namespace="http://www.w3.org/2000/09/xmldsig#"
     schemaLocation="http://www.w3.org/TR/2002/
REC-xmldsig-core-20020212/xmldsig-core-schema.xsd"/>
  <xs:annotation>
    <xs:documentation>
       Incident Object Description Exchange Format v2.0, RFC5070-bis
    </xs:documentation>
  </xs:annotation>

  <!--
   ==================================================================
   == IODEF-Document class                                         ==
   ==================================================================
  -->
    <xs:element name="IODEF-Document">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:Incident"
                      maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>                     
        </xs:sequence>
        <xs:attribute name="version"
                      type="xs:string" fixed="2.00"/>
        <xs:attribute name="lang"
                      type="xs:language" use="required"/>
        <xs:attribute name="formatid"
                      type="xs:string"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ===  Incident class                                            ===
   ==================================================================
  -->
    <xs:element name="Incident">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:IncidentID"/>
          <xs:element ref="iodef:AlternativeID"
                      minOccurs="0"/>
          <xs:element ref="iodef:RelatedActivity"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:DetectTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:StartTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:EndTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:ReportTime"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Discovery"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Assessment"
                      maxOccurs="unbounded"/>
          <xs:element ref="iodef:Method"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Contact"
                      maxOccurs="unbounded"/>
          <xs:element ref="iodef:EventData"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:History"
                      minOccurs="0"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="purpose" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="traceback"/>
              <xs:enumeration value="mitigation"/>
              <xs:enumeration value="reporting"/>
              <xs:enumeration value="watch" />
              <xs:enumeration value="other"/>
              <xs:enumeration value="ext-value"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ext-purpose"
                      type="xs:string" use="optional"/>
        <xs:attribute name="lang"
                      type="xs:language"/>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type" default="private"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  IncidentID class                                            ==
   ==================================================================
  -->
    <xs:element name="IncidentID" type="iodef:IncidentIDType"/>
    <xs:complexType name="IncidentIDType">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="name"
                        type="xs:string" use="required"/>
          <xs:attribute name="instance"
                        type="xs:string" use="optional"/>
          <xs:attribute name="restriction"
                        type="iodef:restriction-type" 
                        default="public"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>

  <!--
   ==================================================================
   ==  ReportID class                                              ==
   ==================================================================
  -->
    <xs:element name="ReportID">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:IncidentID"
            maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
          type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>

  <!--
   ==================================================================
   ==  AlternativeID class                                         ==
   ==================================================================
  -->
    <xs:element name="AlternativeID">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:IncidentID"
                      maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  RelatedActivity class                                       ==
   ==================================================================
  -->
    <xs:element name="RelatedActivity">
      <xs:complexType>
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element ref="iodef:IncidentID" 
                        maxOccurs="unbounded"/>
            <xs:element ref="iodef:URL"
                        maxOccurs="unbounded"/>
            <xs:element ref="iodef:ThreatActor"
                        maxOccurs="unbounded"/>
            <xs:element ref="iodef:Campaign"
                        maxOccurs="unbounded"/>               
          </xs:choice>
          <xs:element ref="iodef:Confidence"
                      minOccurs="0"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>

  <!--
   ==================================================================
   ==  ThreatActor class                                           ==
   ==================================================================
  -->
    <xs:element name="ThreatActor">
      <xs:complexType>
        <xs:sequence>
          <xs:choice>
            <xs:sequence>
              <xs:element ref="iodef:ThreatActorID" />
              <xs:element ref="iodef:Description"
                        minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:element ref="iodef:Description"
                        minOccurs="1" maxOccurs="unbounded"/>
          </xs:choice>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>
    <xs:element name="ThreatActorID" type="xs:string"/>

  <!--
   ==================================================================
   ==  Campaign class                                              ==
   ==================================================================
  -->
    <xs:element name="Campaign">
      <xs:complexType>
        <xs:sequence>
          <xs:choice>
            <xs:sequence>
              <xs:element ref="iodef:CampaignID"/>
              <xs:element ref="iodef:Description"
                        minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:element ref="iodef:Description"
                        minOccurs="1" maxOccurs="unbounded"/>
          </xs:choice>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>
    <xs:element name="CampaignID" type="xs:string"/>

  <!--
   ==================================================================
   ==  AdditionalData class                                        ==
   ==================================================================
  -->
    <xs:element name="AdditionalData" type="iodef:ExtensionType"/>
  <!--
   ==================================================================
   ==   Contact class                                              ==
   ==================================================================
  -->
    <xs:element name="Contact">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:ContactName"
                      minOccurs="0"/>
          <xs:element ref="iodef:ContactTitle"
                      minOccurs="0"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:RegistryHandle"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:PostalAddress"
                      minOccurs="0"/>
          <xs:element ref="iodef:Email"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Telephone"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Fax"
                      minOccurs="0"/>
          <xs:element ref="iodef:Timezone"
                      minOccurs="0"/>
          <xs:element ref="iodef:Contact"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="role" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="creator"/>
              <xs:enumeration value="reporter"/>
              <xs:enumeration value="admin"/>
              <xs:enumeration value="tech"/>
              <xs:enumeration value="provider"/>
              <xs:enumeration value="zone"/>
              <xs:enumeration value="user"/>
              <xs:enumeration value="billing"/>
              <xs:enumeration value="legal"/>
              <xs:enumeration value="abuse"/>
              <xs:enumeration value="irt"/>
              <xs:enumeration value="cc"/>
              <xs:enumeration value="cc-irt"/>
              <xs:enumeration value="le"/>
              <xs:enumeration value="vendor"/>
              <xs:enumeration value="ext-value"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ext-role"
                      type="xs:string" use="optional"/>
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="person"/>
              <xs:enumeration value="organization"/>
              <xs:enumeration value="ext-value"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ext-type"
                      type="xs:string" use="optional"/>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>
    <xs:element name="ContactName"
                type="iodef:MLStringType"/>
    <xs:element name="ContactTitle"
                type="iodef:MLStringType"/>
    <xs:element name="RegistryHandle">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="registry">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="internic"/>
                  <xs:enumeration value="apnic"/>
                  <xs:enumeration value="arin"/>
                  <xs:enumeration value="lacnic"/>
                  <xs:enumeration value="ripe"/>
                  <xs:enumeration value="afrinic"/>
                  <xs:enumeration value="local"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-registry"
                          type="xs:string" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>

    <xs:element name="PostalAddress">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="iodef:MLStringType">
            <xs:attribute name="meaning"
                          type="xs:string" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
    <xs:element name="Email" type="iodef:ContactMeansType"/>
    <xs:element name="Telephone" type="iodef:ContactMeansType"/>
    <xs:element name="Fax" type="iodef:ContactMeansType"/>

    <xs:complexType name="ContactMeansType">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="meaning"
                        type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>

  <!--
   ==================================================================
   ==  Time-based classes                                          ==
   ==================================================================
  -->
    <xs:element name="DateTime"
                type="xs:dateTime"/>
    <xs:element name="ReportTime"
                type="xs:dateTime"/>
    <xs:element name="DetectTime"
                type="xs:dateTime"/>
    <xs:element name="StartTime"
                type="xs:dateTime"/>
    <xs:element name="EndTime"
                type="xs:dateTime"/>
    <xs:element name="Timezone"
                type="iodef:TimezoneType"/>
    <xs:simpleType name="TimezoneType">
      <xs:restriction base="xs:string">
        <xs:pattern value="Z|[\+\-](0[0-9]|1[0-4]):[0-5][0-9]"/>
      </xs:restriction>
    </xs:simpleType>
  <!--
   ==================================================================
   ==  History class                                               ==
   ==================================================================
  -->
    <xs:element name="History">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:HistoryItem"
                      maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type" 
                      default="default"/>
      </xs:complexType>
    </xs:element>
    <xs:element name="HistoryItem">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:DateTime"/>
          <xs:element ref="iodef:IncidentID"
                      minOccurs="0"/>
          <xs:element ref="iodef:Contact"
                      minOccurs="0"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="DefinedCOA"
                      type="iodef:MLStringType"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
        <xs:attribute name="action"
                      type="iodef:action-type" use="required"/>
        <xs:attribute name="ext-action"
        type="xs:string" use="optional"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  Expectation class                                           ==
   ==================================================================
  -->
    <xs:element name="Expectation">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="DefinedCOA"
                      type="iodef:MLStringType"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:StartTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:EndTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:Contact"
                      minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type" 
                      default="default"/>
        <xs:attribute name="severity"
                      type="iodef:severity-type"/>
        <xs:attribute name="action"
                      type="iodef:action-type" default="other"/>
        <xs:attribute name="ext-action"
                      type="xs:string" use="optional"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>

  <!--
   ==================================================================
   ==  Discovery class                                             ==
   ==================================================================
  -->
    <xs:element name="Discovery">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Contact" 
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:DetectionPattern"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="source"
                      use="optional" default="unknown">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="idps"/>
              <xs:enumeration value="siem"/>
              <xs:enumeration value="av"/>
              <xs:enumeration value="file-integrity"/>
              <xs:enumeration value="third-party-monitoring"/>
              <xs:enumeration value="os-log"/>
              <xs:enumeration value="application-log"/>
              <xs:enumeration value="device-log"/>
              <xs:enumeration value="network-flow"/>
              <xs:enumeration value="investigation"/>
              <xs:enumeration value="internal-notification"/>
              <xs:enumeration value="external-notification"/>
              <xs:enumeration value="unknown"/>
              <xs:enumeration value="ext-value"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ext-source"
                      type="xs:string" use="optional"/>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>

    <xs:element name="DetectionPattern">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:Application"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="DetectionConfiguration"
                      type="xs:string"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>

  <!--
   ==================================================================
   ==  Method class                                                ==
   ==================================================================
  -->
    <xs:element name="Method">
      <xs:complexType>
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element ref="iodef:Reference"/>
            <xs:element ref="iodef:Description"/>
          </xs:choice>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  Reference class                                             ==
   ==================================================================
  -->
    <xs:element name="Reference">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="ReferenceName"
                      type="iodef:MLStringType"/>
          <xs:element ref="iodef:URL"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
        <!-- Adding in Attack Type -->
        <xs:attribute name="attacktype" type="att-type" 
                      use="required">
        </xs:attribute>
        <xs:attribute name="ext-attacktype"
          type="xs:string" use="optional"/>
      </xs:complexType>
    </xs:element>

  <!--
   ==================================================================
   ==  Assessment class                                            ==
   ==================================================================
  -->
    <xs:element name="Assessment">
      <xs:complexType>
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element ref="iodef:Impact"/>
            <xs:element ref="iodef:BusinessImpact"/>
            <xs:element ref="iodef:TimeImpact"/>
            <xs:element ref="iodef:MonetaryImpact"/>
          </xs:choice>
          <xs:element ref="iodef:Counter"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Confidence" minOccurs="0"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="occurrence">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="actual"/>
              <xs:enumeration value="potential"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>
    <xs:element name="Impact">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="iodef:MLStringType">
            <xs:attribute name="severity"
                          type="iodef:severity-type"/>
            <xs:attribute name="completion">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="failed"/>
                  <xs:enumeration value="succeeded"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="type"
                          use="optional" default="unknown">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="admin"/>
                  <xs:enumeration value="dos"/>
                  <xs:enumeration value="extortion"/>
                  <xs:enumeration value="file"/>
                  <xs:enumeration value="info-leak"/>
                  <xs:enumeration value="misconfiguration"/>
                  <xs:enumeration value="recon"/>
                  <xs:enumeration value="policy"/>
                  <xs:enumeration value="social-engineering"/>
                  <xs:enumeration value="user"/>
                  <xs:enumeration value="unknown"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-type"
                          type="xs:string" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
    <xs:element name="BusinessImpact">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="iodef:MLStringType">
            <xs:attribute name="severity"
                          use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="none"/>
                  <xs:enumeration value="low"/>
                  <xs:enumeration value="medium"/>
                  <xs:enumeration value="high"/>
                  <xs:enumeration value="unknown"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-severity"
                          type="xs:string" use="optional"/>
            <xs:attribute name="type"
                          use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="breach-proprietary"/>
                  <xs:enumeration value="breach-privacy"/>
                  <xs:enumeration value="loss-of-integrity"/>
                  <xs:enumeration value="loss-of-service" />
                  <xs:enumeration value="loss-financial"/>
                  <xs:enumeration value="degraded-reputation"/>
                  <xs:enumeration value="asset-damage"/>
                  <xs:enumeration value="asset-manipulation"/>
                  <xs:enumeration value="legal"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-type"
                          type="xs:string" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>

    <xs:element name="TimeImpact">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="iodef:PositiveFloatType">
            <xs:attribute name="severity"
                          type="iodef:severity-type"/>
            <xs:attribute name="metric"
                          use="required">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="labor"/>
                  <xs:enumeration value="elapsed"/>
                  <xs:enumeration value="downtime"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-metric"
                          type="xs:string" use="optional"/>
            <xs:attribute name="duration"
                          type="iodef:duration-type"/>
            <xs:attribute name="ext-duration"
                          type="xs:string" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
    <xs:element name="MonetaryImpact">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="iodef:PositiveFloatType">
            <xs:attribute name="severity"
                          type="iodef:severity-type"/>
            <xs:attribute name="currency"
                          type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
    <xs:element name="Confidence">
      <xs:complexType mixed="true">
        <xs:attribute name="rating" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="low"/>
              <xs:enumeration value="medium"/>
              <xs:enumeration value="high"/>
              <xs:enumeration value="numeric"/>
              <xs:enumeration value="unknown"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   == EventData class                                              ==
   ==================================================================
  -->
    <xs:element name="EventData">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:DetectTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:StartTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:EndTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:Contact"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Discovery"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Assessment"
                      minOccurs="0"/>
          <xs:element ref="iodef:Method"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Flow"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Expectation"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Record"
                      minOccurs="0"/>
          <xs:element ref="iodef:EventData"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type" 
                      default="default"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  Flow class                                                  ==
   ==================================================================
  -->
    <!-- Added System unbounded for use only when the source or 
         target watchlist is in use, otherwise only one system entry 
         is expected. 
      -->
    <xs:element name="Flow">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:System"
                      maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  System class                                                ==
   ==================================================================
  -->
    <xs:element name="System">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:Node" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Service"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:OperatingSystem"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Counter"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="AssetID" type="xs:string"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
        <xs:attribute name="category">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="source"/>
              <xs:enumeration value="target"/>
              <xs:enumeration value="intermediate"/>
              <xs:enumeration value="sensor"/>
              <xs:enumeration value="infrastructure"/>
              <xs:enumeration value="ext-value"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ext-category" 
                      type="xs:string" use="optional"/>
        <xs:attribute name="interface"
                      type="xs:string"/>
        <xs:attribute name="spoofed" type="yes-no-unknown-type"
                      default="unknown" />
        <xs:attribute name="virtual" type="yes-no-unknown-type"
                      use="optional" default="unknown"/>
        <xs:attribute name="ownership">
          <xs:simpleType>
            <xs:restriction base="xs:NMTOKEN">
              <xs:enumeration value="organization"/>
              <xs:enumeration value="personal"/>
              <xs:enumeration value="partner"/>
              <xs:enumeration value="customer"/>
              <xs:enumeration value="no-relationship"/>
              <xs:enumeration value="unknown"/>
              <xs:enumeration value="ext-value"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ext-ownership" 
                      type="xs:string" use="optional"/>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   == Node class                                                   ==
   ==================================================================
  -->
    <xs:element name="Node">
      <xs:complexType>
        <xs:sequence>
          <xs:choice maxOccurs="unbounded">
            <xs:element ref="iodef:DomainData" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element ref="iodef:Address"
                        minOccurs="0" maxOccurs="unbounded"/>
          </xs:choice>
          <xs:element ref="iodef:PostalAddress"
                      minOccurs="0"/>
          <xs:element ref="iodef:Location"
                      minOccurs="0"/>
          <xs:element ref="iodef:NodeRole"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Counter"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    <xs:element name="Address">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="category" default="ipv4-addr">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="asn"/>
                  <xs:enumeration value="atm"/>
                  <xs:enumeration value="e-mail"/>
                  <xs:enumeration value="mac"/>
                  <xs:enumeration value="ipv4-addr"/>
                  <xs:enumeration value="ipv4-net"/>
                  <xs:enumeration value="ipv4-net-mask"/>
                  <xs:enumeration value="ipv6-addr"/>
                  <xs:enumeration value="ipv6-net"/>
                  <xs:enumeration value="ipv6-net-mask"/>
                  <xs:enumeration value="site-uri"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-category"
                          type="xs:string" use="optional"/>
            <xs:attribute name="vlan-name"
                          type="xs:string"/>
            <xs:attribute name="vlan-num"
                          type="xs:integer"/>
            <xs:attribute name="observable-id"
                          type="xs:ID" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
    <xs:element name="Location" type="iodef:MLStringType"/>
    <xs:element name="NodeRole">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="iodef:MLStringType">
            <xs:attribute name="category" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="client"/>
                  <xs:enumeration value="client-enterprise"/>
                  <xs:enumeration value="client-partner"/>
                  <xs:enumeration value="client-remote"/>
                  <xs:enumeration value="client-kiosk"/>
                  <xs:enumeration value="client-mobile"/>
                  <xs:enumeration value="server-internal"/>
                  <xs:enumeration value="server-public"/>
                  <xs:enumeration value="www"/>
                  <xs:enumeration value="mail"/>
                  <xs:enumeration value="messaging"/>
                  <xs:enumeration value="streaming"/>
                  <xs:enumeration value="voice"/>
                  <xs:enumeration value="file"/>
                  <xs:enumeration value="ftp"/>
                  <xs:enumeration value="p2p"/>
                  <xs:enumeration value="name"/>
                  <xs:enumeration value="directory"/>
                  <xs:enumeration value="credential"/>
                  <xs:enumeration value="print"/>
                  <xs:enumeration value="application"/>
                  <xs:enumeration value="database"/>
                  <xs:enumeration value="backup"/>
                  <xs:enumeration value="dhcp"/>
                  <xs:enumeration value="infra"/>
                  <xs:enumeration value="infra-firewall"/>
                  <xs:enumeration value="infra-router"/>
                  <xs:enumeration value="infra-switch"/>
                  <xs:enumeration value="camera"/>
                  <xs:enumeration value="proxy"/>
                  <xs:enumeration value="remote-access"/>
                  <xs:enumeration value="log"/>
                  <xs:enumeration value="virtualization"/>
                  <xs:enumeration value="pos"/>
                  <xs:enumeration value="scada"/>
                  <xs:enumeration value="scada-supervisory"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-category"
                          type="xs:string" use="optional"/>
            <xs:attribute name="attacktype" type="att-type" 
                          use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
  <!--
   ==================================================================
   ==  Service Class                                               ==
   ==================================================================
  -->
    <xs:element name="Service">
      <xs:complexType>
        <xs:sequence>
          <xs:choice minOccurs="0">
            <xs:element name="Port"
                        type="xs:integer"/>
            <xs:element name="Portlist"
                        type="iodef:PortlistType"/>
          </xs:choice>
          <xs:element name="ProtoType"
                      type="xs:integer" minOccurs="0"/>
          <xs:element name="ProtoCode"
                      type="xs:integer" minOccurs="0"/>
          <xs:element name="ProtoField"
                      type="xs:integer" minOccurs="0"/>
          <xs:element name="ApplicationHeader"
                      type="iodef:ApplicationHeaderType" 
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="EmailData" minOccurs="0"/>
          <xs:element ref="iodef:Application"
                      minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="ip-protocol"
                      type="xs:integer" use="required"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>
    <xs:simpleType name="PortlistType">
      <xs:restriction base="xs:string">
        <xs:pattern value="\d+(\-\d+)?(,\d+(\-\d+)?)*"/>
      </xs:restriction>
    </xs:simpleType>
  <!--
   ==================================================================
   ==  Counter class                                               ==
   ==================================================================
  -->
    <xs:element name="Counter">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="xs:double">
            <xs:attribute name="type" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="byte"/>
                  <xs:enumeration value="packet"/>
                  <xs:enumeration value="flow"/>
                  <xs:enumeration value="session"/>
                  <xs:enumeration value="event"/>
                  <xs:enumeration value="alert"/>
                  <xs:enumeration value="message"/>
                  <xs:enumeration value="host"/>
                  <xs:enumeration value="site"/>
                  <xs:enumeration value="organization"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-type"
                          type="xs:string" use="optional"/>
            <xs:attribute name="meaning"
                          type="xs:string" use="optional"/>
            <xs:attribute name="duration"
                          type="iodef:duration-type"/>
            <xs:attribute name="ext-duration"
                          type="xs:string" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>

  <!--
   ==================================================================
   ==  EmailData class                                             ==
   ==================================================================
  -->
   <xs:element name="EmailData">
     <xs:complexType>
       <xs:sequence>
         <xs:element name="EmailFrom" 
                     type="iodef:MLStringType" minOccurs="0"/>
         <xs:element name="EmailSubject"
                     type="iodef:MLStringType" minOccurs="0"/>
         <xs:element name="EmailX-Mailer"
                     type="iodef:MLStringType" minOccurs="0"/>
         <xs:element name="EmailHeaderField"
                     type="iodef:ApplicationHeaderType" 
                     minOccurs="0"/>
       </xs:sequence>
       <xs:attribute name="observable-id"
                     type="xs:ID" use="optional"/>
     </xs:complexType>
   </xs:element>

  <!--
   ==================================================================
   ==   DomainData class - from RFC5901                            ==
   ==================================================================
  -->
  <xs:element name="DomainData">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name"
                    type="iodef:MLStringType" maxOccurs="1" />
        <xs:element name="DateDomainWasChecked"
                    type="xs:dateTime"
                    minOccurs="0" maxOccurs="1" />
        <xs:element name="RegistrationDate"  
                    type="xs:dateTime" 
                    minOccurs="0" maxOccurs="1" />
        <xs:element name="ExpirationDate"
                    type="xs:dateTime"
                    minOccurs="0" maxOccurs="1" />
        <xs:element name="RelatedDNS" 
                    type="iodef:RelatedDNSEntryType" 
                    minOccurs="0" maxOccurs="unbounded" />
        <xs:element ref="iodef:Nameservers"
                    minOccurs="0" maxOccurs="unbounded" />
        <xs:element ref="iodef:DomainContacts"
                    minOccurs="0" maxOccurs="1" />
      </xs:sequence>

      <xs:attribute name="system-status">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="spoofed"/>
            <xs:enumeration value="fraudulent"/>
            <xs:enumeration value="innocent-hacked"/>
            <xs:enumeration value="innocent-hijacked"/>
            <xs:enumeration value="unknown"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="ext-system-status"
                    type="xs:string" use="optional"/>
      <xs:attribute name="domain-status">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="reservedDelegation"/>
            <xs:enumeration value="assignedAndActive"/>
            <xs:enumeration value="assignedAndInactive"/>
            <xs:enumeration value="assignedAndOnHold"/>
            <xs:enumeration value="revoked"/>
            <xs:enumeration value="transferPending"/>
            <xs:enumeration value="registryLock"/>
            <xs:enumeration value="registrarLock"/>
            <xs:enumeration value="other"/>
            <xs:enumeration value="unknown"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="ext-domain-status"
                    type="xs:string" use="optional"/>
      <xs:attribute name="observable-id"
                    type="xs:ID" use="optional"/>
    </xs:complexType>
  </xs:element>

    <xs:element name="RelatedDNS"
                type="iodef:RelatedDNSEntryType"/>
    <xs:complexType name="RelatedDNSEntryType">
     <xs:simpleContent>
      <xs:extension base="xs:string">
      <xs:attribute name="record-type" use="optional">
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="A"/>
            <xs:enumeration value="AAAA"/>
            <xs:enumeration value="AFSDB"/>
            <xs:enumeration value="APL"/>
            <xs:enumeration value="AXFR"/>
            <xs:enumeration value="CAA"/>
            <xs:enumeration value="CERT"/>
            <xs:enumeration value="CNAME"/>
            <xs:enumeration value="DHCID"/>
            <xs:enumeration value="DLV"/>
            <xs:enumeration value="DNAME"/>
            <xs:enumeration value="DNSKEY"/>
            <xs:enumeration value="DS"/>
            <xs:enumeration value="HIP"/>
            <xs:enumeration value="IXFR"/>
            <xs:enumeration value="IPSECKEY"/>
            <xs:enumeration value="LOC"/>
            <xs:enumeration value="MX"/>
            <xs:enumeration value="NAPTR"/>
            <xs:enumeration value="NS"/>
            <xs:enumeration value="NSEC"/>
            <xs:enumeration value="NSEC3"/>
            <xs:enumeration value="NSEC3PARAM"/>
            <xs:enumeration value="OPT"/>
            <xs:enumeration value="PTR"/>
            <xs:enumeration value="RRSIG"/>
            <xs:enumeration value="RP"/>
            <xs:enumeration value="SIG"/>
            <xs:enumeration value="SOA"/>
            <xs:enumeration value="SPF"/>
            <xs:enumeration value="SRV"/>
            <xs:enumeration value="SSHFP"/>
            <xs:enumeration value="TA"/>
            <xs:enumeration value="TKEY"/>
            <xs:enumeration value="TLSA"/>
            <xs:enumeration value="TSIG"/>
            <xs:enumeration value="TXT"/>
            <xs:enumeration value="ext-value"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="ext-record-type"
                    type="xs:string" use="optional"/>
     </xs:extension>
    </xs:simpleContent>
   </xs:complexType>

   <xs:element name="Nameservers">
     <xs:complexType>
       <xs:sequence>
         <xs:element name="Server" type="iodef:MLStringType"/>
         <xs:element ref="iodef:Address" maxOccurs="unbounded"/>
       </xs:sequence>
     </xs:complexType>
   </xs:element>

   <xs:element name="DomainContacts">
     <xs:complexType>
        <xs:choice>
          <xs:element name="SameDomainContact"
                      type="iodef:MLStringType"/>
          <xs:element ref="iodef:Contact"
                      maxOccurs="unbounded" minOccurs="1"/>
        </xs:choice>
     </xs:complexType>
   </xs:element>


  <!--
   ==================================================================
   ==  Record class                                                ==
   ==================================================================
  -->
    <xs:element name="Record">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:RecordData"
                      maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>
    <xs:element name="RecordData">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:DateTime"
                      minOccurs="0"/>
          <xs:element ref="iodef:Description"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:Application"
                      minOccurs="0"/>
          <xs:element ref="iodef:RecordPattern"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:RecordItem"
                      maxOccurs="unbounded"/>
          <xs:element ref="iodef:HashData"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:WindowsRegistryKeysModified"
                      minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="iodef:AdditionalData"
                      minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
        <xs:attribute name="observable-id"
                      type="xs:ID" use="optional"/>
      </xs:complexType>
    </xs:element>

    <xs:element name="RecordPattern">
      <xs:complexType>
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="type" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="regex"/>
                  <xs:enumeration value="binary"/>
                  <xs:enumeration value="xpath"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-type"
                          type="xs:string" use="optional"/>
            <xs:attribute name="offset"
                          type="xs:integer" use="optional"/>
            <xs:attribute name="offsetunit"
                          use="optional" default="line">
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="line"/>
                  <xs:enumeration value="byte"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-offsetunit"
                          type="xs:string" use="optional"/>
            <xs:attribute name="instance"
                          type="xs:integer" use="optional"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:element>
    <xs:element name="RecordItem"
                type="iodef:ExtensionType"/>
  <!--
   ==================================================================
   ==  Class to describe Windows Registry Keys                     ==
   ==================================================================
  -->
    <xs:element name="WindowsRegistryKeysModified">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Key" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
            <!-- Allows for the value to be optional for cases 
                 such as, the registry key was deleted -->
               <xs:element name="KeyName" type="xs:string"/>
               <xs:element name="Value" 
                           type="xs:string" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="registryaction"> 
              <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                  <xs:enumeration value="add-key"/>
                  <xs:enumeration value="add-value"/>
                  <xs:enumeration value="delete-key"/>
                  <xs:enumeration value="delete-value"/>
                  <xs:enumeration value="modify-key"/>
                  <xs:enumeration value="modify-value"/>
                  <xs:enumeration value="ext-value"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ext-registryaction" 
                          type="xs:string" use="optional"/>
           </xs:complexType>
         </xs:element>
       </xs:sequence>
       <xs:attribute name="observable-id"
                     type="xs:ID" use="optional"/>
     </xs:complexType>
     </xs:element>

 <!--
   ==================================================================
   ==  Classes that describe hash types, file information          ==
   ==  with certificate properties and digital signature info      ==
   ==  provided through the W3C digital signature schema           ==
   ==  so it does not need to be maintained here.                  ==
   ==================================================================
  -->
  <xs:element name="HashData">
  <xs:complexType>
    <xs:sequence>
        <xs:element name="FileName" type="iodef:MLStringType"
                    minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="FileSize" type="xs:integer" 
                    minOccurs="0" maxOccurs="unbounded"/>
    <!-- CHANGE: Represent file hash information via digsig schema
      and the Reference class.  You may need any of the other classes
      and in particular the KeyInfo (see RFC3275 sect 4.4.4/4.4.5),
      which has been added.  KeyName, KeyValue, SignatureProperties
      classes may be useful, so Signature was added, but you can use
      KeyInfo and Reference directly to avoid some bloat.  -->
        <xs:element ref="ds:Signature" 
                    minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="ds:KeyInfo" 
                    minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="ds:Reference" 
                    minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="iodef:AdditionalData"
                    minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="type" use="optional">
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PKI-email-ds"/>
            <xs:enumeration value="PKI-file-ds"/>
            <xs:enumeration value="PGP-email-ds"/>
            <xs:enumeration value="PGP-file-ds"/>
            <xs:enumeration value="file-hash"/>
            <xs:enumeration value="email-hash"/>
            <!-- QUESTION: Are values needed to differentiate the 
                 key information shared when the ds:KeyInfo class 
                 is referenced? -->
            <xs:enumeration value="ext-value"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="ext-type"
                    type="xs:string" use="optional"/>
      <xs:attribute name="valid" 
                    type="xs:boolean" use="optional" />
      <xs:attribute name="observable-id"
                    type="xs:ID" use="optional"/>
      <xs:attribute name="restriction"
                    type="iodef:restriction-type"/>
    </xs:complexType>
    </xs:element>         
        
  <!--
   ==================================================================
   ==  Classes that describe software                              ==
   ==================================================================
  -->
    <xs:complexType name="SoftwareType">
      <xs:sequence>
        <xs:element ref="iodef:URL"
                    minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="swid"
                    type="xs:string" default="0"/>
      <xs:attribute name="configid"
                    type="xs:string" default="0"/>
      <xs:attribute name="vendor"
                    type="xs:string"/>
      <xs:attribute name="family"
                    type="xs:string"/>
      <xs:attribute name="name"
                    type="xs:string"/>
     <!-- CHANGE: Should UserAgent or HTTPUserAgent fit in 
          SoftwareTypes? This is typically intended to mean
          servers, but the category seems more appropriate
          than others.
     -->
      <xs:attribute name="user-agent"
                    type="xs:string"/>
      <xs:attribute name="version"
                    type="xs:string"/>
      <xs:attribute name="patch"
                    type="xs:string"/>
    </xs:complexType>
    <xs:element name="Application"
                type="iodef:SoftwareType"/>
    <xs:element name="OperatingSystem"
                type="iodef:SoftwareType"/>

  <!--
==================================================================
   == IndicatorData classes                                 ==
   ==================================================================
-->
   <xs:element name="IndicatorData">
     <xs:complexType>
       <xs:sequence>
         <xs:element ref="iodef:Indicator" 
                     minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
     </xs:complexType>
   </xs:element>

   <xs:element name="Indicator">
     <xs:complexType>
       <xs:sequence>
         <xs:element ref="iodef:IndicatorID" />
         <xs:element ref="iodef:AlternativeIndicatorID"
                     minOccurs="0" maxOccurs="unbounded"/>
         <xs:element ref="iodef:Description"
                     minOccurs="0" maxOccurs="unbounded"/>
         <xs:element ref="iodef:StartTime"
                     minOccurs="0" />
         <xs:element ref="iodef:EndTime"
                     minOccurs="0" />
         <xs:element ref="iodef:Confidence"
                     minOccurs="0" />
         <xs:element ref="iodef:Contact"
                     minOccurs="0" maxOccurs="unbounded"/>
         <xs:choice>
           <xs:element ref="iodef:Observable" />
           <xs:element ref="iodef:ObservableReference" />
           <xs:element ref="iodef:IndicatorExpression" />
           <xs:element ref="iodef:IndicatorReference" />
         </xs:choice>
       </xs:sequence>
       <xs:attribute name="restriction"
                    type="iodef:restriction-type"/>
     </xs:complexType>
   </xs:element>

   <xs:element name="IndicatorID" type="iodef:IndicatorIDType"/>
   <xs:complexType name="IndicatorIDType">
      <xs:simpleContent>
        <xs:extension base="xs:id">
          <xs:attribute name="name"
                        type="xs:string" use="required"/>
          <xs:attribute name="version"
                        type="xs:string" use="required"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>

    <xs:element name="AlternativeIndicatorID">
      <xs:complexType>
        <xs:sequence>
          <xs:element ref="iodef:IndicatorID"
                      maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="restriction"
                      type="iodef:restriction-type"/>
      </xs:complexType>
    </xs:element>

   <xs:element name="Observable">
     <xs:complexType>
       <xs:sequence>
         <xs:element ref="iodef:Address" 
                     minOccurs="0"/>
         <xs:element ref="iodef:DomainData" 
                     minOccurs="0"/>
         <xs:element ref="iodef:EmailData" 
                     minOccurs="0"/>
         <xs:element name="ApplicationHeader" 
                     type="iodef:ApplicationHeaderType" 
                     minOccurs="0"/>
         <xs:element ref="iodef:WindowsRegistryKeysModified" 
                     minOccurs="0"/>
         <xs:element ref="iodef:HashData" 
                     minOccurs="0"/>
         <xs:element ref="iodef:RecordData" 
                     minOccurs="0"/>
         <xs:element ref="iodef:EventData" 
                     minOccurs="0"/>
         <xs:element ref="iodef:Incident" 
                     minOccurs="0"/>
         <xs:element ref="iodef:Expectation" 
                     minOccurs="0" maxOccurs="unbounded"/>
         <xs:element ref="iodef:Reference" 
                     minOccurs="0" maxOccurs="unbounded"/>
         <xs:element ref="iodef:Assessment" 
                     minOccurs="0"/>
         <xs:element ref="iodef:HistoryItem" 
                     minOccurs="0"/>
         <xs:element ref="iodef:AdditionalData" 
                     minOccurs="0"/>
       </xs:sequence>
       <xs:attribute name="restriction"
                    type="iodef:restriction-type"/>
     </xs:complexType>
   </xs:element>

   <xs:element name="IndicatorExpression">
     <xs:complexType>
       <xs:sequence>
         <xs:choice>
           <xs:element ref="iodef:IndicatorExpression" 
                       minOccurs="0"/>
           <xs:element ref="iodef:Observable"
                       minOccurs="0" />
           <xs:element ref="iodef:ObservableReference" 
                       minOccurs="0"/>
           <xs:element ref="iodef:IndicatorReference" 
                       minOccurs="0"/>
         </xs:choice>
         <xs:element ref="iodef:AlternativeIndicatorID"
                     minOccurs="0" maxOccurs="unbounded"/>
       </xs:sequence>
       <xs:attribute name="operator" use="required">
         <xs:simpleType>
           <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="not"/>
            <xs:enumeration value="and"/>
            <xs:enumeration value="or"/>
            <xs:enumeration value="xor"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
     </xs:complexType>
   </xs:element>

   <xs:element name="ObservableReference">
     <xs:complexType>
       <xs:attribute name="uid-ref"
                     type="xs:IDREF" use="required"/>
     </xs:complexType>
   </xs:element>

   <xs:element name="IndicatorReference">
     <xs:complexType>
       <xs:attribute name="uid-ref"
                     type="xs:IDREF" use="optional"/>
       <xs:attribute name="euid-ref"
                     type="xs:string" use="optional"/>
       <xs:attribute name="version"
                     type="xs:string" use="optional"/>
     </xs:complexType>
   </xs:element>
<!--   ==================================================================
   == Miscellaneous simple classes                                 ==
   ==================================================================
  -->
    <xs:element name="Description"
                type="iodef:MLStringType"/>
    <xs:element name="URL"
                type="xs:anyURI"/>
  <!--
   ==================================================================
   == Data Types                                                   ==
   ==================================================================
  -->
    <xs:simpleType name="PositiveFloatType">
      <xs:restriction base="xs:float">
        <xs:minExclusive value="0"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="MLStringType">
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="lang"
                        type="xs:language" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="ExtensionType" mixed="true">
      <xs:sequence>
        <xs:any namespace="##any" processContents="lax"
                minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="dtype"
                    type="iodef:dtype-type" use="required"/>
      <xs:attribute name="ext-dtype"
                    type="xs:string" use="optional"/>
      <xs:attribute name="meaning"
                    type="xs:string"/>
      <xs:attribute name="formatid"
                    type="xs:string"/>
      <xs:attribute name="restriction"
                    type="iodef:restriction-type"/>
    </xs:complexType>

    <xs:complexType name="ApplicationHeaderType" mixed="true">
      <xs:sequence>
         <xs:any namespace="##any" processContents="lax"
                 minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="proto"
                    type="xs:integer" use="required"/>
      <xs:attribute name="field"
                    type="xs:string" use="required"/>                     
      <xs:attribute name="dtype"
                    type="iodef:proto-dtype-type" 
                    use="required"/>                     
      <xs:attribute name="observable-id"
                    type="xs:ID" use="optional"/>
    </xs:complexType>

  <!--
   ==================================================================
   == Global attribute type declarations                           ==
   ==================================================================
  -->
    <xs:simpleType name="yes-no-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="yes"/>
        <xs:enumeration value="no"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="yes-no-unknown-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="yes"/>
        <xs:enumeration value="no"/>
        <xs:enumeration value="unknown"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="restriction-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="default"/>
        <xs:enumeration value="public"/>
        <xs:enumeration value="partner"/>
        <xs:enumeration value="need-to-know"/>
        <xs:enumeration value="private"/>
        <xs:enumeration value="white"/>
        <xs:enumeration value="green"/>
        <xs:enumeration value="amber"/>
        <xs:enumeration value="red"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="severity-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="low"/>
        <xs:enumeration value="medium"/>
        <xs:enumeration value="high"/>
      </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="duration-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="second"/>
        <xs:enumeration value="minute"/>
        <xs:enumeration value="hour"/>
        <xs:enumeration value="day"/>
        <xs:enumeration value="month"/>
        <xs:enumeration value="quarter"/>
        <xs:enumeration value="year"/>
        <xs:enumeration value="ext-value"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="action-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="nothing"/>
        <xs:enumeration value="contact-source-site"/>
        <xs:enumeration value="contact-target-site"/>
        <xs:enumeration value="contact-sender"/>
        <xs:enumeration value="investigate"/>
        <xs:enumeration value="block-host"/>
        <xs:enumeration value="block-network"/>
        <xs:enumeration value="block-port"/>
        <xs:enumeration value="rate-limit-host"/>
        <xs:enumeration value="rate-limit-network"/>
        <xs:enumeration value="rate-limit-port"/>
        <xs:enumeration value="upgrade-software"/>
        <xs:enumeration value="rebuild-asset"/>
        <xs:enumeration value="remediate-other"/>
        <xs:enumeration value="status-triage"/>
        <xs:enumeration value="status-new-info"/>
        <xs:enumeration value="watch-and-report"/>
        <xs:enumeration value="defined-coa"/>
        <xs:enumeration value="other"/>
        <xs:enumeration value="ext-value"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dtype-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="boolean"/>
        <xs:enumeration value="byte"/>
        <xs:enumeration value="bytes"/>
        <xs:enumeration value="character"/>
        <xs:enumeration value="date-time"/>
        <xs:enumeration value="integer"/>
        <xs:enumeration value="ntpstamp"/>
        <xs:enumeration value="portlist"/>
        <xs:enumeration value="real"/>
        <xs:enumeration value="string"/>
        <xs:enumeration value="file"/>
        <xs:enumeration value="path"/>
        <xs:enumeration value="frame"/>
        <xs:enumeration value="packet"/>
        <xs:enumeration value="ipv4-packet"/>
        <xs:enumeration value="ipv6-packet"/>
        <xs:enumeration value="url"/>
        <xs:enumeration value="csv"/>
        <xs:enumeration value="winreg"/>
        <xs:enumeration value="xml"/>
        <xs:enumeration value="ext-value"/>
      </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="proto-dtype-type">
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="boolean"/>
        <xs:enumeration value="byte"/>
        <xs:enumeration value="bytes"/>
        <xs:enumeration value="character"/>
        <xs:enumeration value="date-time"/>
        <xs:enumeration value="integer"/>
        <xs:enumeration value="real"/>
        <xs:enumeration value="string"/>
        <xs:enumeration value="xml"/>
        <xs:enumeration value="ext-value"/>
      </xs:restriction>
    </xs:simpleType>
    
      <xs:simpleType name="att-type">
        <xs:restriction base="xs:NMTOKEN">
          <xs:enumeration value="c2-server"/>
          <xs:enumeration value="sink-hole"/>
          <xs:enumeration value="malware-distribution"/>
          <xs:enumeration value="phishing"/>
          <xs:enumeration value="spear-phishing"/>
          <xs:enumeration value="recruiting"/>
          <xs:enumeration value="fraudulent-site"/>
          <xs:enumeration value="dns-spoof"/>
          <xs:enumeration value="other"/>
          <xs:enumeration value="unknown"/>
          <xs:enumeration value="ext-value"/>
        </xs:restriction>
      </xs:simpleType>
</xs:schema>		

]]></artwork></figure></t>
</section>  <!-- IODEF Schema -->

<section title="Security Considerations" anchor="security_considerations">

<t>
The IODEF data model itself does not directly introduce security issues.  
Rather, it simply defines a representation for incident information.  As the data encoded by the IODEF might be considered privacy sensitive by the parties exchanging the information or by those described by it, care needs to be taken in ensuring the appropriate disclosure during both document exchange and subsequent processing.  The former must be handled by a messaging format, but the latter risk must be addressed by the systems that process, store, and archive IODEF documents and information derived from them.
</t>

<t>Executable content could be embedded into the IODEF document directly or through an extension.  The IODEF parser should handle this content with care to prevent unintentional automated execution.</t>

<t>
The contents of an IODEF document may include a request for action or an IODEF parser may independently have logic to take certain actions based on information that it finds.  For this reason, care must be taken by the parser to properly authenticate the recipient of the document and ascribe an appropriate confidence to the data prior to action.
</t>

<t>
The underlying messaging format and protocol used to exchange instances of the IODEF MUST provide appropriate guarantees of confidentiality, integrity, and authenticity.  The use of a standardized security protocol is encouraged.  The Real-time Inter-network Defense (RID) protocol <xref target="RFC6545" /> and its associated transport binding IODEF/RID over HTTP/TLS <xref target="RFC6546" /> provide such security.
</t>

<t>
In order to suggest data processing and handling guidelines of the encoded information, the IODEF allows a document sender to convey a privacy policy using the restriction attribute.  The various instances of this attribute allow different data elements of the document to be covered by dissimilar policies.   While flexible, it must be stressed that this approach only serves as a guideline from the sender, as the recipient is free to ignore it.  The issue of enforcement is not a technical problem.
</t>


</section>  <!-- Security Considerations -->


<section title="IANA Considerations" anchor="iana_considerations">
<t>This document uses URNs to describe an XML namespace and schema conforming to a registry mechanism described in <xref target="RFC3688" /></t>

<t>Registration for the IODEF namespace:
<list style="symbols">
<t>URI: urn:ietf:params:xml:ns:iodef-2.0</t>
<t>Registrant Contact: See the first author of the "Author's Address" section of this document.</t>
<t>XML: None. Namespace URIs do not represent an XML specification.</t>
</list>
</t>

<t>Registration for the IODEF XML schema:
<list style="symbols">
<t>URI: urn:ietf:params:xml:schema:iodef-2.0</t>
<t>Registrant Contact: See the first author of the "Author's Address" section of this document.</t>
<t>XML: See the "IODEF Schema" in <xref target="schema" /> of this document.</t>
</list>
</t>
</section>

<section title="Acknowledgments" anchor="acknowledgments">
<t>
The following groups and individuals, listed alphabetically, contributed substantially to this document and should be recognized for their efforts. 

<list style="symbols">
<t>Kathleen Moriarty, EMC Corporation</t>
<t>Brian Trammell, ETH Zurich</t>
<t>Patrick Cain, Cooper-Cain Group, Inc.</t>
<t>... TODO many more to add ...</t>
</list>
</t>
</section>  <!-- Acknowledgment -->

</middle>
<?rfc needLines="10" ?>
<back>

<references title="Normative References">

<reference anchor="W3C.XML" target="http://www.w3.org/TR/2000/REC-xml-20001006">
<front>
	<title>Extensible Markup Language (XML) 1.0 (Second Edition)</title>
	<author>
	<organization abbrev="W3C">World Wide Web Consortium</organization>
	</author>
	<date month="October" day="6" year="2000" />
</front>
<seriesInfo name="W3C Recommendation" value="" />
</reference>

<reference anchor="W3C.SCHEMA" target="http://www.w3.org/TR/xmlschema-1/">
<front>
	<title>XML XML Schema Part 1: Structures Second Edition</title>
	<author>
	<organization abbrev="W3C">World Wide Web Consortium</organization>
	</author>
	<date month="October" day="28" year="2004" />
</front>
<seriesInfo name="W3C Recommendation" value="" />
</reference>

<reference anchor="W3C.SCHEMA.DTYPES" target="http://www.w3.org/TR/xmlschema-2/">
<front>
	<title>XML Schema Part 2: Datatypes Second Edition</title>
	<author>
	<organization abbrev="W3C">World Wide Web Consortium</organization>
	</author>
	<date month="October" day="28" year="2004" />
</front>
<seriesInfo name="W3C Recommendation" value="" />
</reference>

<reference anchor="W3C.XMLNS" target="http://www.w3.org/TR/REC-xml-names/">
<front>
	<title>Namespaces in XML</title>
	<author>
	<organization abbrev="W3C">World Wide Web Consortium</organization>
	</author>
	<date month="January" day="14" year="1999" />
</front>
<seriesInfo name="W3C Recommendation" value="" />
</reference>

<reference anchor="W3C.XPATH" target="http://www.w3.org/TR/xpath20/">
<front>
	<title>XML Path Language (XPath) 2.0</title>
	<author>
	<organization abbrev="W3C">World Wide Web Consortium</organization>
	</author>
	<date month="June" day="8" year="2006" />
</front>
<seriesInfo name="W3C Candidate Recommendation" value="" />
</reference>

<reference anchor="IEEE.POSIX">
<front>
	<title>Information Technology - Portable Operating System Interface (POSIX) - Part 1: Base Definitions</title>
	<author>
	<organization abbrev="IEEE">Institute of Electrical and Electronics Engineers</organization>
	</author>
	<date month="June" year="2001" />
</front>
<seriesInfo name="IEEE" value="1003.1" />
</reference>


<reference anchor="RFC2119">
<front>
	<title>Key words for use in RFCs to Indicate Requirement Levels</title>
	<author initials="S." surname="Bradner">
		<organization></organization>
	</author>
	<date month="March" year="1997" />
</front>
<seriesInfo name="RFC" value="2119" />
</reference>	

<reference anchor="RFC4646">
<front>
	<title>Tags for Identifying of Languages</title>
	<author initials="A." surname="Philips">
		<organization />
	</author>	
	<author initials="M." surname="Davis">
		<organization />
	</author>	
	<date month="September" year="2006" />
</front>
<seriesInfo name="RFC" value="4646" />
</reference>	

<reference anchor="RFC3986">
<front>
	<title>Uniform Resource Identifiers (URI): Generic Syntax</title>
	<author initials="T." surname="Berners-Lee">
	<organization>MIT/LCS</organization>
	</author>
	<author initials="R." surname="Fielding">
	<organization>U.C. Irvine</organization>
	</author>    
	<author initials="L." surname="Masinter">
	<organization>Xerox Corporation</organization>
	</author>
	<date month="January" year="2005`" />
</front>
<seriesInfo name="RFC" value="3986" />
</reference>	

<reference anchor="RFC2978">
<front>
	<title>IANA Charset Registration Procedures</title>
	<author initials="N." surname="Freed">
		<organization />
	</author>
	<author initials="J." surname="Postel">
		<organization />
	</author>
	<date month="October" year="2000" />
</front>
<seriesInfo name="BCP" value="2978" />
</reference>

<reference anchor="RFC4519">
<front>
	<title>Schema for User Applications</title>
	<author initials="A." surname="Sciberras">
		<organization />
	</author>
	<date month="June" year="2006" />
</front>
<seriesInfo name="RFC" value="4519" />
</reference>

<reference anchor="RFC5322">
<front>
	<title>Internet Message Format</title>
	<author initials="P." surname="Resnick">
	  <organization />
	</author>
	<date month="October" year="2008" />
</front>
<seriesInfo name="RFC" value="5322" />
</reference>

<reference anchor="RFC3339">
<front>
	<title>Date and Time on the Internet: Timestamps</title>
	<author initials="G." surname="Klyne">
		  <organization />
	</author>
	<author initials="C." surname="Newman">
		  <organization />
	</author>
	<date month="July" year="2002" />
</front>
<seriesInfo name="RFC" value="3339" />
</reference>

<reference anchor="ISO8601">
<front>
	<title>International Standard: Data elements and interchange formats - Information interchange - Representation of dates and times</title> 
	<author>
	<organization abbrev="ISO">International Organization for Standardization</organization>
	</author>
	<date month="December" year="2000" />
</front>
<seriesInfo name="ISO" value="8601, Second Edition" />
</reference>

<reference anchor="ISO4217">
<front>
	<title>International Standard: Codes for the representation of currencies and funds, ISO 4217:2001</title>
	<author>
	<organization abbrev="ISO">International Organization for Standardization</organization>
	</author>
	<date day="30" month="August" year="2001" />
</front>

<seriesInfo name="ISO" value="4217:2001" />
</reference>

<reference anchor="RFC3688">
<front>
	<title>The IETF XML Registry</title>
	<author initials="M." surname="Mealling">
		  <organization />
	</author>
	<date month="January" year="2004" />
</front>
<seriesInfo name="RFC" value="3688" />
</reference>

<reference anchor="RFC3275">
<front>
	<title>(Extensible Markup Language) XML-Signature Syntax and Processing</title>
	<author initials="D." surname="Eastlake">
		  <organization />
	</author>
	<author initials="J." surname="Reagle">
		  <organization />
	</author>
	<author initials="D." surname="Solo">
		  <organization />
	</author>
	<date month="March" year="2002" />
</front>
<seriesInfo name="RFC" value="3275" />
</reference>

<reference anchor="IANA.Ports" target="http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt">
<front>
	<title>Service Name and Transport Protocol Port Number Registry</title>
	<author>
	<organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
	</author>
	<date month="January" day="16" year="2014" />
</front>
</reference>

<reference anchor="IANA.Protocols" target="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.txt">
<front>
	<title>Assigned Internet Protocol Numbers</title>
	<author>
	<organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
	</author>
	<date month="January" day="16" year="2014" />
</front>
</reference>

</references>

<references title="Informative References">

<reference anchor="RFC5070">
<front>
<title>Incident Object Description Exchange Format</title>
	<author initials="R." surname="Danyliw">
		  <organization />
	</author>

	<author initials="J." surname="Meijer">
		  <organization />
	</author>
	<author initials="Y." surname="Demchenko">
		  <organization />
	</author>
	<date month="December" year="2007" />
</front>
<seriesInfo name="RFC" value="5070" />
</reference>	

<reference anchor="refs.requirements">
<front>
<title>Requirements for the Format for Incident Information Exchange (FINE)</title>
	<author initials="G. M." surname="Keeni">
		  <organization />
	</author>
    <author initials="Y." surname="Demchenko">
    	  <organization />
	</author>
	<author initials="R." surname="Danyliw">
		  <organization />
	</author>
	<date month="June" year="2006" />
</front>
<seriesInfo name="Work in" value="Progress" />
</reference>

<reference anchor="RFC4765">
<front>
<title>Intrusion Detection Message Exchange Format</title>
	<author initials="H." surname="Debar">
		  <organization />
	</author>

	<author initials="D." surname="Curry">
		  <organization />
	</author>
	<author initials="H." surname="Debar">
		  <organization />
	</author>
	<author initials="B." surname="Feinstein">
		  <organization />
	</author>

	<date month="March" year="2007" />
</front>
<seriesInfo name="RFC" value="4765" />
</reference>	

<reference anchor="RFC6545">
<front>
	<title>Real-time Inter-network Defense (RID)</title>
	<author initials="K." surname="Moriarty">
		  <organization />
	</author>
	<date month="April" year="2012" />
</front>
<seriesInfo name="RFC" value="6545" />
</reference>	

<reference anchor="RFC6546">
<front>
	<title>Transport of Real-time Inter-network Defense (RID) Messages over HTTP/TLS</title>
	<author initials="B." surname="Trammell">
		  <organization />
	</author>
	<date month="April" year="2012" />
</front>
<seriesInfo name="RFC" value="6546" />
</reference>	

<reference anchor="RFC5901">
<front>
	<title>Extensions to the IODEF-Document Class for Reporting Phishing</title>
	<author initials="P." surname="Cain">
		  <organization />
	</author>
	<author initials="D." surname="Jevans">
		  <organization />
	</author>
	<date month="July" year="2010" />
</front>
<seriesInfo name="RFC" value="5901" />
</reference>	

<reference anchor="NIST800.61rev2" target="http://csrc.nist.gov/publications/nistpubs/800-61rev2/SP800-61rev2.pdf">
<front>
<title>NIST Special Publication 800-61 Revision 2: Computer Security Incident Handling Guide</title>
	<author initials="P" surname="Cichonski">
	  <organization />
	</author>
	<author initials="T" surname="Millar">
	  <organization />
	</author>
	<author initials="T" surname="Grance">
	  <organization />
	</author>
	<author initials="K" surname="Scarfone">
	  <organization />
	</author>
	<date month="January" year="2012" />
</front>
</reference>

<reference anchor="RFC3982">
<front>
	<title>IRIS: A Domain Registry (dreg) Type for the Internet Registry Information Service (IRIS)</title>
	<author initials="A." surname="Newton">
		  <organization />
	</author>
	<author initials="M." surname="Sanz">
		  <organization />
	</author>
	<date month="January" year="2005" />
</front>
<seriesInfo name="RFC" value="3982" />
</reference>


<reference anchor="KB310516">
<front>
<title>How to add, modify, or delete registry subkeys and values by using a registration entries (.reg) file</title>
	<author initials="" surname="">
	  <organization>Microsoft Corporation</organization>
	</author>
	<date month="December" year="2007" />
</front>
</reference>

<reference anchor="RFC4180">
<front>
<title>Common Format and MIME Type for Comma-Separated Values (CSV) File
</title>
	<author initials="Y." surname="Shafranovich">
	  <organization />
	  </author>
	<date month="October" year="2005" />
</front>
<seriesInfo name="RFC" value="4180" />
</reference>

</references>
</back>
</rfc>